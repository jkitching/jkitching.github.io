<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Joel Kitching</title><link>https://joelkitching.com/posts/</link><description>Recent content in Posts on Joel Kitching</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 05 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://joelkitching.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>GNOME development with x11docker containers</title><link>https://joelkitching.com/gnome-development-with-x11docker-containers/</link><pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate><guid>https://joelkitching.com/gnome-development-with-x11docker-containers/</guid><description>&lt;p>
&lt;img src="gnome-containers.png" alt="Running multiple containers of different GNOME versions">
&lt;/p>
&lt;p>In &lt;a href="https://joelkitching.com/a-brief-foray-into-gnome-extension-development/">A brief foray into GNOME extension development&lt;/a>, we looked at the general process of updating a GNOME extension to work on a newer version of GNOME.&lt;/p>
&lt;p>The most obvious development environment for working on GNOME extensions is an active GNOME session. But I encountered numerous pain points with this setup:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Reloading extensions:&lt;/strong> This is possible in X by reloading &lt;code>gnome-shell&lt;/code> with Alt+F2 and &lt;code>r&lt;/code>, but impossible when running in Wayland.&lt;/li>
&lt;li>&lt;strong>Looking Glass usage:&lt;/strong> Looking Glass (accessible via Alt+F2 and &lt;code>lg&lt;/code>) is the Chrome Developer Tools of GNOME. But while open, it blocks interaction with the UI, which can be quite inconvenient. We may also want to experiment with some non-reversible changes to the GNOME DOM, after which a restart is needed.&lt;/li>
&lt;li>&lt;strong>Testing different versions:&lt;/strong> New versions of GNOME are released every six months. There are still plenty of folks using old versions of GNOME. Short of booting up a VM, how do we ensure our extension is compatible with previous GNOME versions?&lt;/li>
&lt;/ul>
&lt;p>Today, we will learn how to run a slimmed-down GNOME environment of any arbitrary version within a container.&lt;/p>
&lt;h1 id="enter-the-star-x11docker">Enter the star: x11docker&lt;/h1>
&lt;p>&lt;a href="https://github.com/mviereck/x11docker">x11docker&lt;/a> is a fairly mature project, designed to &amp;ldquo;run GUI applications in Docker or podman containers&amp;rdquo;. It looks like the focus of the project is on sandboxing and security, but turns out to work remarkably well for our own development and testing purposes, without needing to bring up a full virtual machine.&lt;/p>
&lt;p>
&lt;img src="x11docker-xephyr.png" alt="x11docker running with xephyr">
&lt;/p>
&lt;p>x11docker can be used to run either a single application, which is then seamlessly integrated into your current window manager, or a full desktop environment, which is what we will be using. The project provides some pre-built Docker images such as &lt;code>x11docker/gnome&lt;/code> to get started, but we will need to build our own since we have specific requirements of the GNOME version being used.&lt;/p>
&lt;h1 id="x11docker-gnome-dockerfile">x11docker GNOME Dockerfile&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-docker" data-lang="docker">&lt;span class="line">&lt;span class="cl">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> fedora:36&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> dnf -y update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> dnf -y install &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> @base-x &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> dbus-x11 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> gnome-session &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> gnome-shell &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> gnome-terminal &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> gnome-extensions-app &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> nautilus &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> mesa-libGL &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> mesa-dri-drivers &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> dnf -y remove gnome-tour &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> dnf clean all&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> gnome-session&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It took a lot of experimentation to get here, but this Dockerfile is all that is needed. A few points to note:&lt;/p>
&lt;ul>
&lt;li>We choose to use Fedora because it conveniently has an almost one-to-one relationship with stable GNOME versions. In this case, Fedora 36 uses GNOME 42.&lt;/li>
&lt;li>&lt;code>@base-x&lt;/code> provides minimal X11 support. &lt;code>gnome-session&lt;/code> and &lt;code>gnome-shell&lt;/code> are added, along with Terminal, Gnome Extensions App, and Nautilus.&lt;/li>
&lt;li>Mesa drivers are installed in case you&amp;rsquo;d like to use the &lt;code>--gpu&lt;/code> flag with x11docker.&lt;/li>
&lt;li>&lt;code>gnome-tour&lt;/code> is removed because it wants to take you on a tour every time the session starts. No more tours, please!&lt;/li>
&lt;li>The last line starts up GNOME. We use &lt;code>gnome-session&lt;/code> instead of &lt;code>gnome-shell&lt;/code>, since &lt;code>gnome-session&lt;/code> starts up numerous components on which our extension may depend.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># These components are started up with gnome-session.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Source: /usr/share/gnome-session/sessions/gnome.session&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.Shell&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.A11ySettings&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.Color&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.Datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.Housekeeping&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.Keyboard&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.MediaKeys&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.Power&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.PrintNotifications&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.Rfkill&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.ScreensaverProxy&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.Sharing&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.Smartcard&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.Sound&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.UsbProtection&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.Wacom&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">org.gnome.SettingsDaemon.XSettings&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here&amp;rsquo;s a list of Fedora versions with corresponding GNOME versions (as of December 5, 2022), along with any modifications required to the base Dockerfile shown above:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Fedora version&lt;/th>
&lt;th>GNOME version&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>38&lt;/td>
&lt;td>43.1&lt;/td>
&lt;td>§&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>36&lt;/td>
&lt;td>42.4&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>35&lt;/td>
&lt;td>41.6&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>34&lt;/td>
&lt;td>40.9&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>33&lt;/td>
&lt;td>3.38.5&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>32&lt;/td>
&lt;td>3.36.9&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>31&lt;/td>
&lt;td>3.34.8&lt;/td>
&lt;td>Δ&lt;/td>
&lt;td>†&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>30&lt;/td>
&lt;td>3.32.2&lt;/td>
&lt;td>Δ&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>29&lt;/td>
&lt;td>3.30.2&lt;/td>
&lt;td>Δ&lt;/td>
&lt;td>‡&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>28&lt;/td>
&lt;td>3.28.2&lt;/td>
&lt;td>Δ&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>27&lt;/td>
&lt;td>3.26.2&lt;/td>
&lt;td>Δ&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>26&lt;/td>
&lt;td>3.24.2&lt;/td>
&lt;td>Δ&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>§ Both Fedora 37 and 38 run GNOME 43, so I just used the newest of the two.&lt;/li>
&lt;li>Δ Predates &lt;code>gnome-extensions-app&lt;/code>, so don&amp;rsquo;t install this package. The binary &lt;code>gnome-shell-extension-prefs&lt;/code> is bundled with &lt;code>gnome-shell&lt;/code> instead.&lt;/li>
&lt;li>† &lt;code>systemd-login&lt;/code> refuses to start without a patch to &lt;code>systemd-login.service&lt;/code>.&lt;/li>
&lt;li>‡ Requires a polkit patch to stop requesting authentication to create a managed color device on start.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>What about versions of GNOME prior to 3.24.2?&lt;/strong> In short, x11docker was refusing to boot GNOME on Fedora 25, and I figured the need to support pre-2017 setups is quite low. If you can get it working, please let me know!&lt;/p>
&lt;h1 id="x11docker-command-line-options">x11docker command-line options&lt;/h1>
&lt;p>The actual invocation of &lt;code>x11docker&lt;/code> is slightly more involved, and may need some customization depending on your goals:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">x11docker &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --verbose &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --xephyr &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --desktop &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --size&lt;span class="o">=&lt;/span>1600x1200 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --sudouser &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --clipboard &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --init&lt;span class="o">=&lt;/span>systemd &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --dbus &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --network&lt;span class="o">=&lt;/span>host &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --share&lt;span class="o">=&lt;/span>/run/udev/control &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --share&lt;span class="o">=&lt;/span>/sys/class/some/device &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --share&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/.local/share/gnome-shell/extensions &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --runasuser&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;ln -s /home.host/.local/share/gnome-shell/extensions ~/.local/share/gnome-shell&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --runasuser&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;gsettings set org.gnome.desktop.interface scaling-factor 2&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --runasuser&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;gsettings set org.gnome.desktop.wm.keybindings panel-run-dialog \&amp;#34;[&amp;#39;\\\\&amp;lt;Alt\\\\&amp;gt;F2&amp;#39;,&amp;#39;\\\\&amp;lt;Shift\\\\&amp;gt;F2&amp;#39;]\&amp;#34;&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --runasuser&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;gsettings set org.gnome.desktop.input-sources sources \&amp;#34;`gsettings get org.gnome.desktop.input-sources sources`\&amp;#34;&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --runasuser&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;touch .local/share/gnome-shell/lock-warning-shown&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --xtest &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -- &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --cap-add&lt;span class="o">=&lt;/span>SYS_NICE &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -- &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> gnome-shell-43
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here&amp;rsquo;s an explanation of each line:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">x11docker &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --verbose &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Invoke x11docker with the verbose flag. This means we won&amp;rsquo;t need to bother with &lt;code>journalctl&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> --xephyr &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --desktop &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --size&lt;span class="o">=&lt;/span>1600x1200 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use the Xephyr X server, which runs in a nested window, and waits for a connection from &lt;code>gnome-shell&lt;/code>. &lt;code>--xpra&lt;/code> and &lt;code>--weston-xwayland&lt;/code> also work reasonably well, and even allow dynamic resizing of the desktop. But &lt;code>--xephyr&lt;/code> is the only option that allows using a key combination (Ctrl+Shift) to grab the keyboard/mouse, which can be quite useful to avoid shortcuts getting intercepted by the host GNOME session. There are also a bunch of other Wayland modes you can play with. Check out &lt;a href="https://github.com/mviereck/x11docker/wiki/X-server-and-Wayland-Options">x11docker documentation&lt;/a> and find what works best with your setup.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> --sudouser &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --clipboard &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Allow becoming the root user (the password is &lt;code>x11docker&lt;/code>), and enable clipboard for copying text to and from the container.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> --init&lt;span class="o">=&lt;/span>systemd &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --dbus &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>GNOME is heavily dependent on dbus. It also needs an initialization system to run properly. Use systemd since it is most widely supported.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> --network&lt;span class="o">=&lt;/span>host &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --share&lt;span class="o">=&lt;/span>/run/udev/control &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --share&lt;span class="o">=&lt;/span>/sys/class/some/device &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This one trumped me for a really long time, until I finally ran across this &lt;a href="https://dummdida.tumblr.com/post/121087781445/re-udev-events-in-a-container">terse blog post&lt;/a>. If you are doing development which interacts with hardware in some way, you will likely need this section.&lt;/p>
&lt;p>The first two lines are necessary to get udev events sent into the container. This gives GNOME access to events such as when an external hard drive is connected, or when brightness of the screen is adjusted. The last line is to allow write access to some device in the system. For example, controlling the WiFi module, or turning on the camera.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> --share&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/.local/share/gnome-shell/extensions &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --runasuser&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;ln -s /home.host/.local/share/gnome-shell/extensions ~/.local/share/gnome-shell&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Share the host&amp;rsquo;s GNOME extensions directory. Note that the first line doesn&amp;rsquo;t actually work due to a bug in x11docker. I&amp;rsquo;ve uploaded a fix to this &lt;a href="https://github.com/mviereck/x11docker/issues/475">x11docker issue&lt;/a>, but in the meantime, a workaround is to run &lt;code>ln&lt;/code> manually with &lt;code>--runasuser&lt;/code> (the second line).&lt;/p>
&lt;p>Also note that you don&amp;rsquo;t necessarily have to share the same extensions directory as the host&amp;mdash;you could also create a separate directory entirely.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> --runasuser&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;gsettings set org.gnome.desktop.interface scaling-factor 2&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --runasuser&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;gsettings set org.gnome.desktop.wm.keybindings panel-run-dialog \&amp;#34;[&amp;#39;\\\\&amp;lt;Alt\\\\&amp;gt;F2&amp;#39;,&amp;#39;\\\\&amp;lt;Shift\\\\&amp;gt;F2&amp;#39;]\&amp;#34;&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --runasuser&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;gsettings set org.gnome.desktop.input-sources sources \&amp;#34;`gsettings get org.gnome.desktop.input-sources sources`\&amp;#34;&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --runasuser&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;touch .local/share/gnome-shell/lock-warning-shown&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make GNOME slightly more usable in the container. Enable HiDPI scaling (if your screen has a decent DPI). Allow use of Shift+F2 to bring up the Run dialog, which is useful since Alt+F2 is intercepted by the host. Use keyboard layout specified by the host (since I use Dvorak). (Four is the magic number of backslashes needed here, due to the way x11docker handles these strings.) Don&amp;rsquo;t show the &amp;ldquo;No lock screen&amp;rdquo; warning when &lt;code>gnome-shell&lt;/code> starts.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> --xtest &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enable the XTEST extension in X, which is required by &lt;code>/usr/lib/gsd-power&lt;/code> in GNOME versions 3.30 and under.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> -- &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --cap-add&lt;span class="o">=&lt;/span>SYS_NICE &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Everything after the first &lt;code>--&lt;/code> is sent directly to the container engine (Docker by default). Add the &lt;code>SYS_NICE&lt;/code> capability, which is required to run the &lt;code>gnome-shell&lt;/code> binary for versions 3.38 and under.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> -- &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> gnome-shell-43
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After the second &lt;code>--&lt;/code> comes the image name, and then the command to run. The command defaults to whatever follows &lt;code>CMD&lt;/code> in the Dockerfile (in our case, &lt;code>gnome-session&lt;/code>), so we don&amp;rsquo;t need to specify that here.&lt;/p>
&lt;p>WHEW! That was a mouthful.&lt;/p>
&lt;h1 id="simplify-invocation">Simplify invocation&lt;/h1>
&lt;p>To simplify the whole process of starting up a GNOME container with x11docker, I created a GitHub repository called &lt;a href="https://github.com/jkitching/x11docker-gnome">jkitching/x11docker-gnome&lt;/a>. In it, you will find the following files:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>gnome-shell-XYZ.Dockerfile:&lt;/strong> The Dockerfile necessary to build a container image for GNOME XYZ. Mostly they are identical, except for the differences mentioned in the table above. I went against the grain here and didn&amp;rsquo;t create a separate directory for each one.&lt;/li>
&lt;li>&lt;strong>&lt;a href="https://github.com/jkitching/x11docker-gnome/blob/main/Makefile">Makefile&lt;/a>:&lt;/strong> The Makefile allows building, pushing, pulling, and running of each image. Running in this case is just invoking &lt;code>/bin/bash&lt;/code>&amp;mdash;for starting with x11docker, see below.&lt;/li>
&lt;li>&lt;strong>&lt;a href="https://github.com/jkitching/x11docker-gnome/blob/main/run-gnome-shell.sh.template">run-gnome-shell.sh.template&lt;/a>:&lt;/strong> Rather than relying on your shell history to store the above huge x11docker invocations, copy this shell script template and make adjustments for your specific use case.&lt;/li>
&lt;/ul>
&lt;p>The recommended workflow is as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Pull all images from Docker Hub:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># docker.io/jkitching/gnome-shell-XYZ&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make pull all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Copy the run shell script template&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp run-gnome-shell.sh.template run-gnome-shell.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod +x run-gnome-shell.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Make modifications as necessary&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vim run-gnome-shell.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Start GNOME container with x11docker&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./run-gnome-shell.sh gnome-shell-39
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>x11docker also has a pretty neat way of saving command-line option templates in &lt;code>~/.config/x11docker/preset&lt;/code>, but unfortunately using this method precludes dynamically generating arguments such as the &lt;code>org.gnome.desktop.input-sources&lt;/code> setting above. Check out the &lt;a href="https://github.com/mviereck/x11docker#preconfiguration-with---preset">Preconfiguration with &lt;code>--preset&lt;/code>&lt;/a> section of documentation for details.&lt;/p>
&lt;h1 id="go-forth-and-conquer-the-gnomes">Go forth and conquer the GNOMEs&lt;/h1>
&lt;p>Now that we have the ability to run a containerized &lt;code>gnome-shell&lt;/code> of any arbitrary version, development becomes much simpler. For example, when validating that your extension works in previous versions of GNOME, simply start up a container, enable the extension, test functionality, and make a few fixes along the way.&lt;/p>
&lt;p>Now go forth, be brave, and use the power of containers to supercharge your GNOME development!&lt;/p>
&lt;h1 id="addendum">Addendum&lt;/h1>
&lt;ul>
&lt;li>I briefly considered grabbing specific versions of &lt;code>gnome-shell&lt;/code> from the Fedora &lt;a href="https://koji.fedoraproject.org/koji/packageinfo?packageID=9009">&amp;ldquo;koji&amp;rdquo; build system&lt;/a>. Which would be super cool&amp;mdash;instant access to a running GNOME instance of &lt;em>any&lt;/em> version, not just the latest stable versions. But realistically, unless someone is tracking down a very specific GNOME bug, I don&amp;rsquo;t think there are many use cases. Maybe next time!&lt;/li>
&lt;li>&lt;a href="https://github.com/Schneegans/gnome-shell-pod">Schneegans/gnome-shell-pod&lt;/a> provides &lt;code>gnome-shell&lt;/code> containers for automated testing of GNOME extensions on different GNOME versions. There is a decent amount of overlap here, and perhaps some collaboration could be in order.&lt;/li>
&lt;/ul></description></item><item><title>A brief foray into GNOME extension development</title><link>https://joelkitching.com/a-brief-foray-into-gnome-extension-development/</link><pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate><guid>https://joelkitching.com/a-brief-foray-into-gnome-extension-development/</guid><description>&lt;p>I used to be an exclusive user of tiling window managers, namely: &lt;a href="https://xmonad.org/">xmonad&lt;/a>. When I converted over to the GNOME world, I tried all of the window tiling extensions and settled on the excellent &lt;a href="https://github.com/paperwm/PaperWM">PaperWM&lt;/a>. But PaperWM, as with most GNOME extensions, struggled to keep up with the rapid pace of GNOME releases, and I was stuck on vanilla GNOME for some time.&lt;/p>
&lt;p>Recently, Arch pushed the GNOME 43 release, and, surprise! I lost another extension that I have come to love: Philippe Troin&amp;rsquo;s &lt;a href="https://github.com/F-i-f/soft-brightness">Soft Brightness&lt;/a>. This extension takes the existing brightness control in GNOME, and extends the darkest setting past the limits of the physical display by adjusting gamma settings. (In other words, it prevents you from going blind when working in a dark room.) There was an &lt;a href="https://github.com/F-i-f/soft-brightness/issues/58">open issue for GNOME 43 support&lt;/a> on the Soft Brightness GitHub page, but before I wrote this post, no progress had yet been made. Rather than downgrading GNOME and waiting patiently, I decided to take matters into my own hands.&lt;/p>
&lt;p>
&lt;img src="soft-brightness-settings.png" alt="Settings dialog of GNOME Soft Brightness extension">
&lt;/p>
&lt;h1 id="update-metadatajson-and-hope-for-the-best">Update &lt;code>metadata.json&lt;/code> and hope for the best&lt;/h1>
&lt;p>First of all, let&amp;rsquo;s clone the Soft Brightness repository, and update &lt;code>metadata.json&lt;/code> to claim support for GNOME 43.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="line">&lt;span class="cl">&lt;span class="gh">diff --git a/src/metadata.json.in b/src/metadata.json.in
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">index e4af9c3..33595f6 100644
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">&lt;/span>&lt;span class="gd">--- a/src/metadata.json.in
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">&lt;/span>&lt;span class="gi">+++ b/src/metadata.json.in
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span>&lt;span class="gu">@@ -12,7 +12,8 @@
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span> &amp;#34;3.38&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;40&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;41&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">- &amp;#34;42&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gd">&lt;/span>&lt;span class="gi">+ &amp;#34;42&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ &amp;#34;43&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span> ],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;url&amp;#34;: &amp;#34;https://github.com/F-i-f/soft-brightness&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;uuid&amp;#34;: &amp;#34;@uuid@&amp;#34;,
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The documentation shows the incantation to build and install the extension: &lt;code>meson build &amp;amp;&amp;amp; ninja -C build install&lt;/code>. Great! Let&amp;rsquo;s re-enable the extension and see what happens.&lt;/p>
&lt;p>
&lt;img src="extensions-error.png" alt="Soft Brightness extension encounters an error when enabled">
&lt;/p>
&lt;p>Okay&amp;hellip; so that didn&amp;rsquo;t work very well. There&amp;rsquo;s something wrong with AggregateMenu. Coincidentally, the guide for &lt;a href="https://gjs.guide/extensions/upgrading/gnome-shell-43.html#quick-settings">porting extensions to GNOME 43&lt;/a> mentions that AggregateMenu has been replaced with QuickSettings. No problem! We just need to search-and-replace a few strings, and the extension is ready for action. But&amp;hellip; seems like there&amp;rsquo;s no way to &amp;ldquo;reload&amp;rdquo; the extension in a running GNOME session.&lt;/p>
&lt;h1 id="reload-gnome-extensions">Reload GNOME extensions&lt;/h1>
&lt;p>GNOME might not allow reloading extensions dynamically, but there is a simple workaround: reload &lt;code>gnome-shell&lt;/code> instead. For all of you X11 users, go ahead and press Alt+F2 right now, type the &lt;code>r&lt;/code> command, and hit &amp;lt;Enter&amp;gt;. Tah-dah! For all of you Wayland users&amp;hellip; I feel your pain.&lt;/p>
&lt;p>
&lt;img src="run-command.png" alt="GNOME Run Command dialog">
&lt;/p>
&lt;p>Whereas X11 architecture separates the X server (e.g. Xorg) from the compositor (e.g. Mutter or &lt;code>gnome-shell&lt;/code>), Wayland architecture merges the two, and &lt;code>gnome-shell&lt;/code> also takes on the equivalent role of an X server. &lt;a href="https://wayland.freedesktop.org/docs/html/ch03.html#sect-Wayland-Architecture-wayland_architecture">(More reading for those interested.)&lt;/a> Thus, reloading &lt;code>gnome-shell&lt;/code> in Wayland effectively brings down the entire session along with all of your running applications.&lt;/p>
&lt;p>
&lt;figure>
&lt;img src="x-architecture.png" alt="X11 architecture diagram">
&lt;figcaption>In Wayland, (4) X Server and (5) Compositor are merged.&lt;/figcaption>
&lt;/figure>
&lt;/p>
&lt;p>Apparently it&amp;rsquo;s pretty easy to run a nested &lt;code>gnome-shell&lt;/code> in Wayland, but it seems to have a lot of strange issues. For example, opening up most applications from the nested window results in them being opened in&amp;hellip; the parent &lt;code>gnome-shell&lt;/code>. Huh? Also, there is no brightness control in the nested window, which is pretty important if we are to get Soft Brightness working. So&amp;hellip; until we figure out &lt;a href="https://joelkitching.com/gnome-development-with-x11docker-containers/">how to get containers involved&lt;/a>, I&amp;rsquo;m sad to say that the easiest route is to temporarily switch over to an X11 session.&lt;/p>
&lt;h1 id="set-up-the-development-environment">Set up the development environment&lt;/h1>
&lt;p>Once there, we can get our development workflow going:&lt;/p>
&lt;ol>
&lt;li>Make changes to the extension source code&lt;/li>
&lt;li>&lt;code>ninja -C build install&lt;/code>&lt;/li>
&lt;li>Alt+F2, &lt;code>r&lt;/code> &amp;lt;Enter&amp;gt;&lt;/li>
&lt;li>Close and re-open &lt;code>gnome-extensions-app&lt;/code>&lt;/li>
&lt;li>Attempt to enable extension&lt;/li>
&lt;/ol>
&lt;p>
&lt;img src="dev-workflow.png" alt="GNOME development workflow screenshot">
&lt;/p>
&lt;p>Or for those who enjoy stringing commands together and avoiding tinkering with the UI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ gnome-extensions disable soft-brightness@fifi.org &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> ninja -C build install &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> killall -HUP gnome-shell &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> sleep &lt;span class="m">3&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> gnome-extensions &lt;span class="nb">enable&lt;/span> soft-brightness@fifi.org
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sometimes the one-line error provided by &lt;code>gnome-extensions-app&lt;/code> is enough to track down the latest error. But we can get more information (a full stack trace) by watching &lt;code>gnome-shell&lt;/code> logs while reloading extensions. On a systemd-based distribution, that amounts to running &lt;code>journalctl -f _COMM=gnome-shell&lt;/code>.&lt;/p>
&lt;h1 id="explore-with-looking-glass">Explore with Looking Glass&lt;/h1>
&lt;p>I quickly discovered that &lt;code>s/AggregateMenu/QuickSettings/g&lt;/code> wasn&amp;rsquo;t going to cut it. My heart yearned for Chrome Developer Tools, which lets you click a UI element to inspect its properties and position in the DOM. And then the heavenly words appeared, glowing softly in my Google search results: &lt;a href="https://wiki.gnome.org/Projects/GnomeShell/LookingGlass">Looking Glass&lt;/a>. Although nowhere near as advanced as Developer Tools, it allows us to inspect the JavaScript world of a running instance of &lt;code>gnome-shell&lt;/code>, and interactively make modifications.&lt;/p>
&lt;p>Looking Glass is accessible via Alt+F2 and then &lt;code>lg&lt;/code>. Honestly, it&amp;rsquo;s somewhat frustrating to use, since it blocks interaction with the UI until closed with &amp;lt;Esc&amp;gt;. But for our purposes, it should be more than sufficient.&lt;/p>
&lt;p>
&lt;img src="looking-glass.png" alt="Looking Glass dialog">
&lt;/p>
&lt;p>To familiarize ourselves with QuickSettings, let&amp;rsquo;s see if we can remove the brightness indicator. In order to figure out the correct set of instructions, we refer to (1) existing Soft Brightness code, (2) the commit used to convert the brightness indicator over to QuickSettings (&lt;a href="https://gitlab.gnome.org/GNOME/gnome-shell/-/commit/7bbd59838a6cfe14b189fa7bd8e743fb0cac9bc3">status/brightness: Port to quick settings&lt;/a>), and (3) an extension for customizing QuickSettings (&lt;a href="https://github.com/qwreey75/quick-settings-tweaks/blob/e7eab279bbe2cfaeb59a7068808166ac7c5c046d/features/dndQuickToggle.js">Quick Settings Tweaker&lt;/a>). We lather liberally with trial and error, and come out with this JavaScript sequence:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">QS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">imports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ui&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">main&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">panel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">statusArea&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">quickSettings&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">QS&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_settings&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">bi&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">quickSettingsItems&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">bi&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_proxy&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">run_dispose&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">bi&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get_parent&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">remove_child&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">bi&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get_parent&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">remove_child&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">destroy&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img src="quick-settings-no-brightness.png" alt="QuickSettings without brightness indicator">
&lt;/p>
&lt;p>And&amp;hellip; it&amp;rsquo;s gone! Well, that&amp;rsquo;s rather satisfying, but slightly awkward. Let&amp;rsquo;s reload &lt;code>gnome-shell&lt;/code> to get it back. (Again, sorry Wayland users!)&lt;/p>
&lt;h1 id="current-strategy-used-by-soft-brightness">Current strategy used by Soft Brightness&lt;/h1>
&lt;p>In current Soft Brightness code, the brightness indicator class is extended, and functions are overridden to serve the extension&amp;rsquo;s needs. When the extension is enabled, the modified class is instantiated, and the existing brightness indicator is swapped out with the modified one:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">Indicator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">imports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ui&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">status&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">brightness&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Indicator&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">class&lt;/span> &lt;span class="nx">ModifiedBrightnessIndicator&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Indicator&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_sliderChanged&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">slider&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_sync&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It turns out that in the process of converting the brightness indicator to QuickSettings &lt;a href="https://gitlab.gnome.org/GNOME/gnome-shell/-/commit/7bbd59838a6cfe14b189fa7bd8e743fb0cac9bc3#e220cd54002c151792a62cbc832b05dd3ad65ad0_20_16">(GitLab commit)&lt;/a>, the &lt;code>Indicator&lt;/code> class was renamed, made private, and hidden behind a wrapper class called &lt;code>SystemIndicator&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Class is private to this module and not exported
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">BrightnessItem&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">QuickSlider&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_sliderChanged&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">slider&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_sync&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Class is exported as imports.ui.status.brightness.Indicator
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">Indicator&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">SystemIndicator&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">quickSettingsItems&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nx">BrightnessItem&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Rather than completely re-implementing the new &lt;code>BrightnessItem&lt;/code> class and dealing with spaghetti code for handling &lt;code>gnome-shell&lt;/code> 42/43 differences, we take a different approach: monkey patching.&lt;/p>
&lt;h1 id="monkey-patching-the-brightness-indicator">Monkey patching the brightness indicator&lt;/h1>
&lt;p>Although monkey patching is generally frowned upon, it can be useful in an environment where extensibility is limited.&lt;/p>
&lt;p>Instead of swapping out a completely new brightness indicator object, we keep the existing brightness indicator in tact, but modify its behaviour while the Soft Brightness extension is enabled.&lt;/p>
&lt;p>We implement two functions to perform the monkey patching and restoration when the extension is disabled, taking care to &lt;strong>&lt;code>bind()&lt;/code>&lt;/strong> our function&amp;rsquo;s &lt;code>this&lt;/code> variable to the indicator object itself:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">_enableBrightnessIndicatorPatch&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">indicator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_brightnessIndicator&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">indicator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">__orig__slider_changed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">indicator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_slider_changed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">indicator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_slider_changed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span> &lt;span class="p">}).&lt;/span>&lt;span class="nx">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">indicator&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">_disableBrightnessIndicatorPatch&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">indicator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_brightnessIndicator&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">indicator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setSliderValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">indicator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">__orig__setSliderValue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">delete&lt;/span> &lt;span class="nx">indicator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">__orig_setSliderValue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="trouble-with-brightnessproxy">Trouble with &lt;code>BrightnessProxy&lt;/code>&lt;/h1>
&lt;p>This strategy works great. However, the extension exhibits some strange behaviour in GNOME 42 and below. It turns out that despite swapping out the &lt;code>_sync&lt;/code> function, the Brightness proxy (used for setting and accessing system backlight brightness) still calls the old function! What&amp;rsquo;s going on here?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">class&lt;/span> &lt;span class="nx">BrightnessItem&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">QuickSlider&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_proxy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">BrightnessProxy&lt;/span>&lt;span class="p">(...,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">proxy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_proxy&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;g-properties-changed&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// This _sync call is causing our headache.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_sync&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This bit of code is &lt;strong>exactly&lt;/strong> the same in both GNOME versions 42 and 43. Barring some part of the JS spec that I&amp;rsquo;m missing (totally possible), the only natural conclusion is that there is some bug in how GNOME 42&amp;rsquo;s JavaScript engine (SpiderMonkey) handles the &amp;ldquo;this&amp;rdquo; keyword w.r.t. arrow functions. &lt;strong>If anyone &lt;em>does&lt;/em> have some conclusive information, I would love to hear from you!&lt;/strong>&lt;/p>
&lt;p>Unfortunately, we can&amp;rsquo;t change the proxy&amp;rsquo;s callback function on-the-fly. So, our best course of action is to destroy and re-create the proxy, with a callback function that reliably calls the currently-used &lt;code>_sync&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">indicator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_proxy&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">run_dispose&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">indicator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_proxy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">BrightnessProxy&lt;/span>&lt;span class="p">(...,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">proxy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_proxy&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;g-properties-changed&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_sync&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}).&lt;/span>&lt;span class="nx">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">indicator&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that we have to convert the function passed to &lt;code>BrightnessProxy&lt;/code> to the form &lt;code>(function(x, y) {...})&lt;/code> in order to call &lt;strong>&lt;code>bind()&lt;/code>&lt;/strong>. And this fixes our issue!&lt;/p>
&lt;h1 id="clean-up-document-and-upload-changes">Clean up, document, and upload changes&lt;/h1>
&lt;p>This is the most important part. I extensively document the problems encountered with &lt;code>BrightnessProxy&lt;/code>, author a commit message explaining the rationale behind using monkey patching, and create a &lt;a href="https://github.com/F-i-f/soft-brightness/pull/59">GitHub pull request&lt;/a>. And we&amp;rsquo;re done!&lt;/p>
&lt;p>There is one point that I conveniently glossed over: testing the GNOME extension in previous versions of GNOME&amp;hellip; how did I do that? Let&amp;rsquo;s look at GNOME containerization in the next post, &lt;a href="https://joelkitching.com/gnome-development-with-x11docker-containers/">GNOME development with x11docker containers&lt;/a>.&lt;/p></description></item><item><title>Amazon intern day 14: retail website and foosball</title><link>https://joelkitching.com/amazon-intern-day-14-retail-website-and-foosball/</link><pubDate>Fri, 13 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-14-retail-website-and-foosball/</guid><description>&lt;p>Today I didn&amp;rsquo;t accomplish particularly much. I messed around with setting up the retail website on my machine, and got it working. It looks very strange without the regular Amazon content in it.&lt;/p>
&lt;h1 id="local-retail-website-magic">Local retail website magic&lt;/h1>
&lt;p>When you run the retail website locally, it has a very neat feature where you can add &lt;code>?isConfig=1&lt;/code> to the end of the URL, and it will show you each component on the page, how long it took to load, and some other cool information. It will also point you directly to the Mason code and the HTML used to generate it, in case you are trying to debug a component that might, for example, be taking a really long time to run.&lt;/p>
&lt;h1 id="chroot-progress">chroot progress&lt;/h1>
&lt;p>I also messed around a lot with trying to get a Gentoo chroot working. I actually had a lot more luck than I&amp;rsquo;d had with Arch Linux, which was an utter pain, since everything had been compiled for a newer kernel version which had some new function available that everything expected, but which my ancient RHEL 4 kernel did not have.&lt;/p>
&lt;p>But I think that for whatever reason by compiling everything from source it figured out which kernel I&amp;rsquo;m using and dealt with it? Or something like that? Anyways, I&amp;rsquo;ve got it running and just compiled xmonad in it, so we&amp;rsquo;ll see if I have any luck using it as my X manager.&lt;/p>
&lt;h1 id="i-can-has-decentralized-currency">I can has decentralized currency?&lt;/h1>
&lt;p>I also went to a talk with Chris today in the eyebrow building from a professor at MIT. It was all about some kind of decentralized currency system, whereby users build trust in one another by &amp;ldquo;loaning&amp;rdquo; them money, and then there was all of this complicated theoretical business about gaming the system, using it for other applications, etc.&lt;/p>
&lt;p>I sort of started to doze off within the first half hour or so (which later became my signature move during lunch talks), not necessarily because it wasn&amp;rsquo;t interesting, but mostly because it was a little beyond my understanding, and also the guy speaking was an Indian with a very heavy accent.&lt;/p>
&lt;h1 id="a-small-intern-lunch">A small intern lunch&lt;/h1>
&lt;p>After that I had lunch with a few interns (specifically, ones I&amp;rsquo;d hung out with last Friday after our impromptu intern dinner). I&amp;rsquo;d asked Peter if he wanted to eat lunch together, and then I also invited Joshua, and then when I was in the cafeteria waiting for them I found Nathan, so he joined us too.&lt;/p>
&lt;p>It was sort of funny because after talking about our jobs and school and whatnot, we all were basically sitting there, not saying much, but avoiding going back to work. It was a while before someone finally decided to break the ice and get up, at which point there was a mass exodus of everyone heading back to work.&lt;/p>
&lt;h1 id="symlinks-and-interviews">Symlinks and interviews&lt;/h1>
&lt;p>Then, Chris headed down to a CLOE meeting (his pet project, and in part my future intern project), and told me it was optional. I stayed at my desk for a while, then got lonely and bored, so I wandered down there. (Although it took me a while&amp;mdash;I went to the wrong building first, then went to another floor that didn&amp;rsquo;t connect two &amp;ldquo;sister&amp;rdquo; buildings, then finally found the floor that did, and then headed up to the right floor in the other building.)&lt;/p>
&lt;p>It was just him and one other guy, and apparently a few others had stopped by but it was not very busy. They were trying to get some service to start on Chris&amp;rsquo; machine, but he was having trouble because of a bunch of weird symlink issues or something. There was also some discussion about interviews and interview questions, which seems to be a very common topic around here! (I later discovered this is a pretty universal topic engineers love to discuss, sometimes to challenge or boast, sometimes to derail productivity.)&lt;/p>
&lt;h1 id="foosball-invasion">Foosball invasion!&lt;/h1>
&lt;p>We returned to discover that a foosball table had been retrieved by Mark and his manager, Al! Apparently it had been in the works to buy one for a while, and this Friday just so happened to be the day it was brought in. I played quite a number of games, and I think started to improve pretty quickly after some embarrassment. It is kind of scary when you play a game against your manager&amp;rsquo;s manager though!&lt;/p>
&lt;p>After a while, there was one game where I was playing with my manager&amp;rsquo;s manager, against my manager and my mentor. Oh such interesting situations! They also bought a bunch of beer too, so I was able to drink some and relax a bit after a long week.&lt;/p>
&lt;p>(I later realized that our company hierarchy closely matched foosball skill levels, based on a ladder competition that had been started. It was definitely the case that myself, my mentor, my manager, and my manager&amp;rsquo;s manager all had increasingly high skill levels.)&lt;/p>
&lt;h1 id="bring-on-the-cheesecake">Bring on the cheesecake&lt;/h1>
&lt;p>There were plans to go out to the &lt;a href="http://www.thecheesecakefactory.com/">Cheesecake Factory&lt;/a> [&lt;a href="http://www.yelp.ca/biz/the-cheesecake-factory-seattle">Yelp&lt;/a>] tonight, so I headed down to the purported meeting spot at the foot of SEA27 (my building), but I didn&amp;rsquo;t see anyone. I headed over to check the eyebrows, because I think someone else had mentioned that as a meeting spot, but no one was there either.&lt;/p>
&lt;p>So I returned to SEA27, and passed by this kid again who seemed to be looking for something. He of course turned out to be an intern. Patryk was his name, and he was very outgoing and interesting. Shortly after that, Nathan and a bunch of other people arrived, and we all headed to a bus stop that took us downtown.&lt;/p>
&lt;p>We headed there amidst some conversation about different cities in North America, and arrived to a huge crowd of interns waiting outside the restaurant. Apparently they didn&amp;rsquo;t take reservations past a certain time, so Jenny (who was off work that day since they were moving her department&amp;rsquo;s office to the new SLU campus) simply walked down there at 5 PM and asked to make reservations for 25. Apparently they lied to her and said it would only be an hour wait, when it actually ended up being two hours. But we did end up getting in there eventually!&lt;/p>
&lt;h1 id="too-many-people">Too. Many. People.&lt;/h1>
&lt;p>I thought dinner last Friday was crazy, but this was just getting ridiculous. We had an entire row of maybe seven tables to ourselves, despite the fact that you could really only talk to the four or so people around you during the dinner.&lt;/p>
&lt;p>I was sitting beside Patryk, Peter, a kind of hick guy in front of me, and then an amusing Indian dude beside him. Conversation was had, food was eaten, cake was ordered, and payments were made. So many things.&lt;/p>
&lt;h1 id="patryks-apartment">Patryk&amp;rsquo;s apartment&lt;/h1>
&lt;p>After that, there was some question as to what to do, but Patryk invited people over to his place (which, incidentally, is a block away from my apartment, and I pass it every day on my way to work). We headed over there, and slowly but surely, our group dwindled from 25 down to 9. Once we arrived there, another guy left since he had to let his roommate into his apartment or something, and Peter left to go get his bike, but he returned pretty quickly.&lt;/p>
&lt;p>Patryk&amp;rsquo;s place is really cool! He&amp;rsquo;s on the top (fourteenth) floor, and has a gorgeous view of the space needle, which looks especially amazing at night. It is a two-person place, and I was slightly surprised to see that it is smaller than my own single-person place.&lt;/p>
&lt;p>We bought some beer at a nearby convenience store, and hung out for a while, comparing apartments, work, and universities. After a while, they decided to head over to another intern&amp;rsquo;s apartment, since it has great rooftop access. Along with a few other people, I bailed&amp;mdash;since my apartment was right next door, and since it was so late, it didn&amp;rsquo;t really make sense.&lt;/p>
&lt;h1 id="onward-and-upward">Onward and upward&lt;/h1>
&lt;p>From here on out, my social life snowballed in a great way, I made leaps and bounds of progress at work (once I finally got started on my project), and I had tons of amazing Seattle adventures. I even started dating someone (an intern, but not from Amazon) after a while! My internship at Amazon provided a summer full of awesome experiences that simply can&amp;rsquo;t be expressed in a mere two weeks&amp;rsquo; worth of blogging. If you&amp;rsquo;re here trying to get a sense of whether you&amp;rsquo;d like to intern at Amazon, my advice to you is: do it!&lt;/p></description></item><item><title>Amazon intern day 13: the full-day grind</title><link>https://joelkitching.com/amazon-intern-day-13-the-full-day-grind/</link><pubDate>Thu, 12 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-13-the-full-day-grind/</guid><description>&lt;p>Today was my big day-long tutorial about Amazon and Prime-land! I attempted to go in to work well-rested and well-fed, although I ended up being a bit worried since I couldn&amp;rsquo;t quite remember if we were supposed to start at 9 AM or 10 AM. I was in fact late, so luckily it was 10 AM.&lt;/p>
&lt;h1 id="pull-learning">&amp;ldquo;Pull&amp;rdquo; learning&lt;/h1>
&lt;p>It was a little more broken up than I had expected, which was nice. The first portion was supposed to be down on the fifth floor next to some weird Simpsons display, but then we ended up moving back up to the ninth floor for various reasons. It was fairly nice, since Mark seemed to listen to me yesterday when I told him that I would prefer a &amp;ldquo;pull&amp;rdquo; sort of learning, and so a lot of it was me asking things and repeating things.&lt;/p>
&lt;h1 id="a-google-employee-infiltrates">A Google employee infiltrates&lt;/h1>
&lt;p>We broke for lunch, during which Chris and I went down to a talk being put on by a Google employee. This was a very high-up person in charge of testing Chrome and Maps, and he was explaining how most of the typical roles of testers aren&amp;rsquo;t actually useful. One of his best lines was, &amp;ldquo;you can&amp;rsquo;t put a lipstick on a pig.&amp;rdquo; (In other words, it&amp;rsquo;s fairly useless to build an insecure product, patch up some problems afterwards, and then ship it off.)&lt;/p>
&lt;p>He argued more for testers that were fully integrated into the programming process, and for building useful testing frameworks where bugs can be reported in a single click. He showed us a fairly impressive system for reporting bugs in Chrome, where you can simply click on an element of a webpage, and it will automatically send it off to the bug repository, and then highlight it for future viewers of the same page. Cool!&lt;/p>
&lt;h1 id="more-more-more-information">More more more information&lt;/h1>
&lt;p>After lunch, we headed up to the top floor of our building, where we ended up with a nice sunny room for part two. More useful information. Chris ordered a pizza, which was delicious&amp;mdash;basil and goat cheese and garlic, among other things. James even came in and stole some.&lt;/p>
&lt;p>Another half-hour break while Mark went to a meeting (which I basically spent sitting quietly and absorbing information), we headed into the last meeting room. I somehow kept absorbing information, and overall the whole day ended up being very useful.&lt;/p>
&lt;h1 id="olympic-sculpture-park">Olympic Sculpture Park&lt;/h1>
&lt;p>I came home, sat around, and it was a gorgeous evening, so I decided to try my bike out for a spin. (I&amp;rsquo;d brought it down from Vancouver.) I headed towards Queen Anne, and ended up going right down to the water instead, where I found a strange &lt;a href="http://www.seattleartmuseum.org/visit/osp/">sculpture park&lt;/a> [&lt;a href="http://www.yelp.ca/biz/olympic-sculpture-park-seattle">Yelp&lt;/a>] that led to the waterfront. In fact, it was so strange that, upon biking to the other side of the park (over top of a highway), I heard a voice from nowhere asking me to &amp;ldquo;please walk my bike while in the park.&amp;rdquo; That&amp;rsquo;s some 1984 stuff right there.&lt;/p>
&lt;p>I biked all the way along the shoreline for a while, taking some shots as the sun went down. It gave me hope that there are nice waterfront park areas in Seattle (although this one is very difficult to get to, with only two entrances extremely far apart, since there is a highway and a set of railways to cross).&lt;/p>
&lt;p>I returned home, and through some posts on Facebook discovered that my high school friend Kevin had been on the same cruise up to Alaska as my friends. He in fact checked into a Starbucks mere blocks from where I live!&lt;/p>
&lt;h1 id="no-big-deal-just-a-drop-in-replacement-for-the-windows-ui">No big deal, just a &amp;ldquo;drop-in replacement for the Windows UI&amp;rdquo;&lt;/h1>
&lt;p>Later on, I went to meet someone a Vancouver friend knew living in the area. We had arranged to go meet at this really neat restaurant in Capitol Hill. It&amp;rsquo;s somewhat difficult to get to from my house, but it was a very neat walk through that area of town. I felt way safer than I did downtown&amp;mdash;there were actually people milling about in the evening, and I walked by some clubs and bars.&lt;/p>
&lt;p>The restaurant itself was one of those trendy semi-bar places that stays open late (2 AM) and then apparently opens early and has breakfast as well. It had all of these concert posters up on the walls, and other neat decorations, and yet it still seemed to retain a very sophisticated air. The food looked delicious, but I only ended up drinking a beer.&lt;/p>
&lt;p>Anthony, the friend of a friend, was apparently an assistant to someone founding a start-up developing a &amp;ldquo;drop-in replacement for the Windows UI.&amp;rdquo; He barely knew any details about it, but apparently it had a lot of &amp;ldquo;celebrities&amp;rdquo; backing it and he knew it would succeed. Hmm, good luck. Suffice to say, conversation didn&amp;rsquo;t flow terribly well, and we didn&amp;rsquo;t end up hanging out again.&lt;/p>
&lt;p>I decided to walk home after that, I had just missed the bus, and it took me exactly 30 minutes. I cross-cut through downtown, but still managed to avoid the sketchy areas. Got home, collapsed, and went to sleep.&lt;/p></description></item><item><title>Amazon intern day 12: in which a project is chosen</title><link>https://joelkitching.com/amazon-intern-day-12-in-which-a-project-is-chosen/</link><pubDate>Wed, 11 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-12-in-which-a-project-is-chosen/</guid><description>&lt;p>I had a fairly decent sleep, and woke up to&amp;hellip; a Quinn&amp;rsquo;s head in between my bedroom door and the bathroom door. I had to carefully step over it a few times to get in between the two rooms. I showered, and quietly ate some breakfast.&lt;/p>
&lt;p>By the time I was about to leave, Quinn had gotten up and was getting ready to take the early bus in (despite having claimed the night prior that he would be staying until the girls left in the afternoon). So, without even saying goodbye to Mariana (who had just woken up) and Monica, he came with me downstairs, we said goodbye, and he headed off in his own direction!&lt;/p>
&lt;h1 id="2pt-two-pizza-team">2pt: two pizza team&lt;/h1>
&lt;p>Today at work we had a Two Pizza Team meeting. What is a Two Pizza Team you ask? It&amp;rsquo;s a group of people small enough to feed with two pizzas. Historically, all of Prime used to be included in a 2pt, but then it grew much too large to be fed by merely two pizzas. The purpose of a 2pt is to cross-cut different positions (engineers, marketers, testers) in a small, agile team that can choose a little project to work on and go at it with little interference. It&amp;rsquo;s sort of Google 20% time-esque, except more organized into a group, with meetings and whatnot.&lt;/p>
&lt;p>The purpose of their meeting was to work on a project that had been code-named CLOE (which I later looked up and apparently means Closed-Loop Output Error, referring to a certain class of algorithms.) The goal of the CLOE project is to ingest logs about Prime ads shown and their result (converted or not), and when queried for a specific customer, consult CLOE&amp;rsquo;s model and hand back the ad that would most likely result in a new conversion.&lt;/p>
&lt;h1 id="online-cloe-and-offline-cloe">Online CLOE and offline CLOE&lt;/h1>
&lt;p>I had a pretty good explanation of the two flavours: online CLOE and offline CLOE. The &lt;em>offline version&lt;/em> simply works off of existing Prime advertisement logs joined with customer data, and is potentially a little more transparent and easier to understand.&lt;/p>
&lt;p>The &lt;em>online version&lt;/em> learns on-the-fly as more information comes in from impressions, but its model is not quite as human-accessible, and is slightly more complex. I discovered that if I were to choose this project, it would most likely be a variation of the offline version, where the end-goal becomes discovering the most likely predictors of ad success. Cool!&lt;/p>
&lt;p>After the meeting, I got some more explanations from Chris back near our desks (which I really don&amp;rsquo;t need sometimes when my brain is fried!), and I spent some more time trying to get my Arch chroot working. I pretty much decided it was impossible to get it functional due to the kernel being so old on my desktop machine and their sources being statically compiled against newer things, so I started trying to get a Gentoo chroot working instead. I may abandon the project, write more on the progress later.&lt;/p>
&lt;h1 id="chose-your-destiny">Chose your destiny!&lt;/h1>
&lt;p>I also had my one-on-one meeting with Mark that day, in which Mark gave me the options of my intern project, and in which I chose one. One option was doing a lot of UI improvement Prime&amp;rsquo;s content-editing tool, making it so that editing templates wasn&amp;rsquo;t so painful for marketers. It would be a bunch of HTML, AJAX, working with WYSIWYG editors, etc.&lt;/p>
&lt;p>The other option was the offline CLOE project&amp;mdash;taking Prime customer impression data, and trying to discover variables that predict high success of specific ads. Basically, since I have always done web development stuff, and I wanted to try something completely new, I chose the CLOE project. I&amp;rsquo;ll get experience working with clusters, processing huge amounts of data, and some machine learning. It will be difficult, but awesome.&lt;/p>
&lt;p>Afterwards, Chris was determined to get some environments deployed to my computer before my day-long tutorial tomorrow. I tried to make it clear that I needed to leave early at around 4:30 PM today, since I wanted to see Monica and Mariana off on their bus, and he was actually quite accommodating in being aware of the time.&lt;/p>
&lt;h1 id="seeing-the-guests-off-and-busses">Seeing the guests off (and busses)&lt;/h1>
&lt;p>So, just after 4:30 PM, I headed home as planned, hung out with the girls a bit more, heard their tales of visiting the &lt;a href="http://www.pacificsciencecenter.org/">Pacific Science Center&lt;/a> [&lt;a href="http://www.yelp.ca/biz/pacific-science-center-seattle">Yelp&lt;/a>], and then took them to their bus stop a two-minute walk north of my apartment, just past Denny Way at a Best Western. This will be good to know if I wish to visit home. A bunch of people started arriving, the bus came, and everyone got on. Goodbye you two, thanks for visiting!&lt;/p>
&lt;p>(Since writing there are now two bus companies that travel between Vancouver and Seattle: &lt;a href="http://www.quickcoach.com/">Quick Shuttle&lt;/a> and &lt;a href="https://www.boltbus.com/">BoltBus&lt;/a>, the latter of which claims to have as low as $1 fares. Very convenient for a weekend visit up to Vancouver!)&lt;/p>
&lt;p>Afterwards, I came back home, sat around on my computer for the rest of the night, and didn&amp;rsquo;t get anything particularly useful accomplished.&lt;/p></description></item><item><title>Amazon intern day 11: explain it to me</title><link>https://joelkitching.com/amazon-intern-day-11-explain-it-to-me/</link><pubDate>Tue, 10 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-11-explain-it-to-me/</guid><description>&lt;p>Today was a long day of explanations, farewells, and hellos. Spencer, the friend who was staying at my apartment for a few days, and I got up at relatively the same time this morning, and cooked up a quick breakfast (which included leftover pekoras). When I was leaving, we made arrangements for where he would put my keys, so that when he left later on in the afternoon to head to the airport, he would be able to lock my door. It would be put in the flowerpot in the lobby!&lt;/p>
&lt;h1 id="tutorials-and-explanations">Tutorials and explanations&lt;/h1>
&lt;p>I left for work, arrived a half-hour late due to our impromptu breakfast, and luckily neither of my teammates were there to witness my lateness. I did some more tutorials, had a very helpful meeting with Chris and Mark in which the whole Prime space was explained again, and then escaped to have lunch with Spencer, despite accidentally missing another meeting that I had forgotten about (which is essentially useless at this point for me anyways, since I have no clue what is going on in said meetings).&lt;/p>
&lt;p>Spencer and I had some Jimmy John&amp;rsquo;s sandwiches for lunch, and afterwards we wandered around the park area near Lake Union for a bit. He headed to the airport, and I headed back to my desk!&lt;/p>
&lt;h1 id="james-explains-his-job">James explains his job&lt;/h1>
&lt;p>A bit later, I met with James for our Training Plan meeting. Of course I had to wait for his team&amp;rsquo;s golf tournament to end, which was quite amusing to watch I admit. We found the room I had booked, and basically I probed him about what he actually does on his team (it turns out to either be a lot simpler than I thought, or he is not telling me the whole story).&lt;/p>
&lt;p>Mainly, their job is to take what the marketing people tell them to do and turn it into some kind of Prime config file. They also own the code that grabs all of the context necessary to pass into the binary than ingests that config file, which is written in Perl/Mason (the distinctions of which is unclear based off of our discussions).&lt;/p>
&lt;h1 id="cruise-visitors">Cruise visitors&lt;/h1>
&lt;p>I managed to escape work eventually, and came home to meet my second wave of visitors at the coffee shop beneath my building! They had just finished a cruise that went up to Alaska, and as it turns out, most of them decided to just head straight home, so it was only three friends who remained: Monica, Mariana and Quinn. And in fact, I learned they planned to stay the night, when I thought they were not going to! But that was fine; it just meant I could test out my air mattress, and that got to see them more.&lt;/p>
&lt;p>I brought them up to my place, impressed them with its spaciousness, and then we sat around for a while and they told me about their wonderful cruise. I think there was about 100 pictures shown to me of food in the span of two minutes. It seemed to be the main attraction of a cruise. Apparently there was also some neat touring of Alaska and the Yukon, some nice saunas and showers and shows and more.&lt;/p>
&lt;h1 id="an-extra-little-kick">An extra little &amp;ldquo;kick!&amp;rdquo;&lt;/h1>
&lt;p>After a while, we got hungry, and so I suggested we go enjoy the end-of-day sunshine rays at the same place I had fish &amp;amp; chips the other day. We walked over to the downtown area, then to Pike Place Market, and it turned out the aforementioned restaurant was already closed!&lt;/p>
&lt;p>So instead, we tried this extremely sketchy teriyaki chicken joint (which I later looked up, and is called &lt;a href="http://www.yelp.ca/biz/osaka-grill-teriyaki-and-deli-seattle">Osaka Grill Teriyaki &amp;amp; Deli&lt;/a>, in which a sketchy homeless woman told us it was extremely important to get the chicken with ranch sauce on it, because it adds an extra little &amp;ldquo;kick&amp;rdquo; (at which point she sort of bounced her body to express this sentiment). (I also later noticed on the Yelp page one of the reviews specifically mentions that &amp;ldquo;customers are very passionate about their ranch sauce.&amp;rdquo;) We ordered the $6 meal each from the little Vietnamese women, and it turned out to be quite good. I&amp;rsquo;ll have to try going back there another time!&lt;/p>
&lt;h1 id="iga-run-a-failed-movie-and-sleep">IGA run, a failed movie, and sleep&lt;/h1>
&lt;p>We briefly did some shopping at an IGA to grab some juice and ice cream, among other things (so much ice cream!), and returned to my apartment. Everyone was pretty dead tired at that point&amp;mdash;apparently cruises are exhausting?&lt;/p>
&lt;p>So we sat around playing this strange dice game, and then attempted to watch a movie, during which Mariana fell asleep, and I almost did. We stopped it half-way through, haphazardly made some sleeping arrangements in the living room, and then we all went to bed.&lt;/p></description></item><item><title>Amazon intern day 10: quiet Monday</title><link>https://joelkitching.com/amazon-intern-day-10-quiet-monday/</link><pubDate>Mon, 09 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-10-quiet-monday/</guid><description>&lt;p>Monday&amp;rsquo;s morning was fairly typical in the beginning, up until arriving at work. When I did, at 9 AM, it was eerily quiet. I think this is fairly typical at Amazon in the morning, however the quiet was exacerbated by the fact that neither my mentor nor my manager were there.&lt;/p>
&lt;p>My manager wasn&amp;rsquo;t because he was holed up in a coffee shop and had meetings all day (coincidentally, he was back for a short while that just so happened to be the same time I was gone for lunch), and my mentor wasn&amp;rsquo;t around because he was at home trying to send back an Amazon Fresh order!&lt;/p>
&lt;h1 id="the-soy-milk-affair">The soy milk affair&lt;/h1>
&lt;p>Apparently he had set up a recurring order to get a 15% discount, planning to cancel it after the first delivery. However, cancelling it hadn&amp;rsquo;t gone through for some reason. He was able to return the non-perishables, but apparently now has way too much soy milk for his own good, as well as bulk flour and other items.&lt;/p>
&lt;p>It was sort of funny because out of nowhere he said something along the lines of, &amp;ldquo;You don&amp;rsquo;t happen to drink soy milk, do you?&amp;rdquo; I responded, &amp;ldquo;Uh, yes, actually I do.&amp;rdquo; Then he followed up with, &amp;ldquo;What about the Silk brand with natural flavour?&amp;rdquo; &amp;ldquo;Yep, I drink that.&amp;rdquo; Which is actually extremely improbable, since I think most soy milk drinkers buy the vanilla flavour. But the result was that he said he would bring a carton in tomorrow for me to have, since he won&amp;rsquo;t be able to finish them all.&lt;/p>
&lt;h1 id="picnic-under-the-brows">Picnic under the &amp;lsquo;brows&lt;/h1>
&lt;p>At around noon, my friend Spencer, who was visiting for a few days and staying at my apartment, walked over to the Amazon campus (I drew him a path to follow on the map), and I went outside to meet him. After walking up and down the same street for a long time, unsure of which cross-street I told him to go to, I finally found him at Republican St, which was unmarked along Terry Ave. We sat down by the Amazon eyebrow arches, and had a nice little picnic lunch of Indian leftovers from the night before, some cookies and biscuits, and a banana.&lt;/p>
&lt;p>After eating, I brought him into my building, got him a visitor badge, and took him up to the gorgeous view on the 11th floor. Then, I showed him my desk on the 9th floor, he met my mentor Chris, and he also glimpsed the gorgeous view out my floor&amp;rsquo;s window.&lt;/p>
&lt;p>He headed home, and I worked some more on this SDE Bootcamp lab (which it turned out neither Chris nor his friend James from our sister team could figure out). I watched a video on package management at Amazon (confusing!) and then started another lab. I headed out just after 5 PM, and arrived at home to Spencer in the middle of cooking an awesome spaghetti meal.&lt;/p>
&lt;h1 id="a-gathering-a-subletting">A gathering, a subletting!&lt;/h1>
&lt;p>We ate the spaghetti, and then after some cleaning up, my Seattleite friend Angela (who is in fact a mutual friend) came over. The three of us sat and drank some wine like sophisticated adults for a bit, chatting about my Spencer&amp;rsquo;s upcoming trip to China, interesting people at our respective workplaces, and whatnot.&lt;/p>
&lt;p>I called this girl Jessica who is subletting from my house back in Vancouver for the summer, and I was ecstatic to hear that she was 100% game to go through with the sublet and move in on the 15th (only losing a half month of rent).&lt;/p>
&lt;h1 id="hipster-pizza-bar">Hipster pizza-bar&lt;/h1>
&lt;p>At about 8:30 PM, we went out to check this place called &lt;a href="http://thecrocodile.com/">The Crocodile&lt;/a> [&lt;a href="http://www.yelp.ca/biz/the-crocodile-seattle">Yelp&lt;/a>]. It is composed of two areas&amp;mdash;the first is a music venue (the front) for live bands, and the second is a restaurant-bar (the back). There is this enormous oven for baking pizza in the back, which is apparently lit and hot 24/7. Everyone in the place was such a hipster. Our server had a strange outfit on, with some weird tie thing that stuck out of his shirt. The doorman had dreadlocks. Everyone was ridiculously cool.&lt;/p>
&lt;p>The server was telling us a bit about the history of the back area&amp;mdash;apparently it used to be some fancy expensive restaurant or something like that, and then they didn&amp;rsquo;t have enough business, so they were going to close down, but instead they decided to merge with The Crocodile at the front of the building, and only serve cheap pizza and cheap beer. Winning combination.&lt;/p>
&lt;p>And wow, it ended up being ridiculously cheap. The pitcher was $8, and the pizzas were $6.50 each. We had a coupon that said buy two drinks and a pizza and get another pizza free, and luckily he let us use our pitcher as &amp;ldquo;two drinks&amp;rdquo; instead, so we got a free pizza out of the meal too. And it was actually really good! Except for the anchovy (gross) and the pineapple (eww) the chef had put on one pizza. Also, it was amusing watching the movie Rocky playing on the TV screen, along to some completely unrelated music playing at the bar.&lt;/p>
&lt;h1 id="collapse">Collapse&lt;/h1>
&lt;p>After leaving (and re-returning to get my toque, and having my ID re-checked by the exact same doorman&amp;hellip;), Spencer and I sent Angela off home in a taxi, and headed back to my apartment. Both of us were exhausted, so we pretty much slept right away.&lt;/p></description></item><item><title>Amazon intern day 9: touring</title><link>https://joelkitching.com/amazon-intern-day-9-touring/</link><pubDate>Sun, 08 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-9-touring/</guid><description>&lt;p>It took quite a while for myself, and my friend Spencer who was visiting, to wake up. We lounged about, showered, ate the food Spencer had cooked last night, had some cereal and yogurt and bananas, and then made our Mother&amp;rsquo;s Day calls.&lt;/p>
&lt;h1 id="experience-music-project-museum">Experience Music Project Museum&lt;/h1>
&lt;p>We then spent some time trying to figure out what to do for the day, and decided after much deliberation that we would go to the &lt;a href="http://www.empmuseum.org/">Experience Music Project Museum&lt;/a> [&lt;a href="http://www.yelp.ca/biz/emp-museum-seattle-2">Yelp&lt;/a>].&lt;/p>
&lt;p>By the time we got there, it was 2:30 PM. We wandered around the Seattle Centre area, and weren&amp;rsquo;t sure if we even wanted to go in the EMP since it was so nice out. But we decided to in the end, and saw some strange exhibits on Jimmy Hendrix, Nirvana, and Battlestar Galactica. Somewhat disappointingly none of which I was terribly interested in. Probably the coolest part of the museum was this room with a bunch of instrument stations, where you can sit down and it will teach you the basics of playing, and then you can play along with some music. It helps you too&amp;mdash;for example, the guitar had a light for each string on each fret, and the appropriate one lights up during the explanations. I need a guitar like that!&lt;/p>
&lt;h1 id="another-pike-place-jaunt">Another Pike Place jaunt&lt;/h1>
&lt;p>After the EMP, we took the monorail downtown, and walked over to &lt;a href="http://pikeplacemarket.org/">Pike Place Market&lt;/a>. We saw this amazing musician right outside of the first Starbucks [&lt;a href="http://www.yelp.ca/biz/starbucks-seattle-88">Yelp&lt;/a>]. He was playing&amp;mdash;wait for it&amp;mdash;a saw, with a violin bow.&lt;/p>
&lt;p>Then, we wandered around a bit watching all of the fruit and flower stands close for the evening. We decided to get some fish and chips at this one restaurant, and went up to the third floor to eat, where there was a gorgeous view of the bay.&lt;/p>
&lt;h1 id="dinner-and-a-movie">Dinner and a movie&lt;/h1>
&lt;p>We wandered around and found a liquor store for wine, and then made it home amidst all the crazy people of Seattle. We relaxed in my apartment for a while, and of a sudden it was 9 PM, so we decided that we would order take-out instead of going out for dinner. We found an &lt;a href="http://www.seattlemadhu.com/">Indian restaurant&lt;/a> [&lt;a href="http://www.yelp.ca/biz/madhu-cuisine-of-india-seattle-2">Yelp&lt;/a>] with decent reviews three blocks away from my apartment, so we ordered some food and picked it up (although we got lost, and had to ask directions from some guy who turned out to be extremely cool and sassy).&lt;/p>
&lt;p>We brought the food home and wined and dined, and then sat down to watch a random movie I had, &lt;a href="http://www.imdb.com/title/tt0087800/">Nightmare on Elm Street&lt;/a>. It was sort of a silly kind of scary movie, but it was still very frightening!&lt;/p></description></item><item><title>Amazon intern day 8: visitor</title><link>https://joelkitching.com/amazon-intern-day-8-visitor/</link><pubDate>Sat, 07 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-8-visitor/</guid><description>&lt;p>Today I got up, and basically decided that I am definitely going to stay here, since I don&amp;rsquo;t want to fight with Graebel et al. So that, combined with the fact that my friend Spencer was arriving today to visit, caused me to decide that I should start treating this place like home, cleaning up, and arranging things how I like them for the next four months.&lt;/p>
&lt;h1 id="lazy-saturday-morning">Lazy Saturday morning&lt;/h1>
&lt;p>I didn&amp;rsquo;t do terribly much this morning, but I attempted to put up the curtains in my room (since it was so bright this morning, although I failed anyway since the rods were the wrong size), cleaned all the dishes Aboda had left nicely arranged on the dining table, made the bed. Nothing too significant, but I now feel like I am in a much better mindset of living here.&lt;/p>
&lt;h1 id="meeting-the-visitor">Meeting the visitor!&lt;/h1>
&lt;p>Spencer&amp;rsquo;s train was set to arrive in town at around 11:05 AM, so I headed down there via bus (which actually arrived on time!) shortly before that. I found my way over to the sketchy Amtrak station in the sketchy part of town, and waited for a while. The train was fairly late, and I think he must have walked right past me, because I ended up having to go ask the ticket desk to page him (he was waiting outside where I had told him to wait!).&lt;/p>
&lt;p>After some confused wandering, we managed to find a bus that took us near my apartment. We relaxed a bit, and later decided to go out to the Chipotle we passed earlier for lunch. Ridiculously good, except I forgot to (read: was too cheap to) add the guacamole!&lt;/p>
&lt;h1 id="canucks-at-safeway">Canucks at Safeway&lt;/h1>
&lt;p>After that, we headed back to my place. My friend must have been some kind of sleep deprivedâhe slept for two or three hours, and I was getting bored, so I went shopping at Safeway for groceries. It was a very strange Safeway compared to the ones in Canada (or even any grocery store in Canada!).&lt;/p>
&lt;p>I couldn&amp;rsquo;t find a very good selection of hashbrowns or butter; the yogurt section was almost entirely composed of small lunch-sized portions; the selection of meats (both uncooked and lunch meat) was terrible, as was the selection of baked goods. (Only later would I find out is that Safeway is kind of the &amp;lsquo;ghetto&amp;rsquo; grocery store in the States.)&lt;/p>
&lt;p>While shopping, I somehow met a cool guy who said he wanted to retire on Vancouver Island. Also, at the checkout, the cashier guy asked me if I had a Safeway account, and I said yes, and gave him my mom&amp;rsquo;s home phone number. I waited for a second, wondering if it would work (since it&amp;rsquo;s a Canadian number), and it did. And then he asked me, &amp;ldquo;Why aren&amp;rsquo;t you at home watching the Canucks game?&amp;rdquo; I was very taken aback! But it turns out he was Canadian, and had moved there for his ex, and was just
staying for a bit before moving back. But it was very nice to hear of something related to home!&lt;/p>
&lt;h1 id="downstairs-coffee-shop">Downstairs coffee shop&lt;/h1>
&lt;p>I returned to my apartment, unpacked some food with Spencer (who had finally woken up), and then the two of us went down to try the coffee shop called &lt;a href="http://www.velvetfoam.com/locations/">Uptown Espresso&lt;/a> [&lt;a href="http://www.yelp.ca/biz/uptown-espresso-seattle-7">Yelp&lt;/a>] below my building. It&amp;rsquo;s a pretty neat place to hang out, although the coffee isn&amp;rsquo;t great and they don&amp;rsquo;t appear to have mugs for using in the cafe. Perhaps I&amp;rsquo;ll bring one next time I visit.&lt;/p>
&lt;h1 id="to-the-club">To the club!&lt;/h1>
&lt;p>Then we scoured the web to find a place that sold hard liquor close-by, failed, and just hung out in my apartment, cooked some food, drank some wine, and then finally headed out to a club in Capitol Hill (the purported gay and/or hipster area of town), called &lt;a href="http://www.rplaceseattle.com/">R Place&lt;/a> [&lt;a href="http://www.yelp.ca/biz/r-place-bar-and-grill-seattle">Yelp&lt;/a>]. It was a very cool club! There were tons of young people there, and the drinks are ridiculously strong in the States (although they are as ridiculously expensive as in Canada). The place was three floors tall, each one with a separate bar. The top floor was the dancing area, and it was completely packed!&lt;/p>
&lt;p>We prowled the club for a while, danced for a while, and then they closed,
so we returned home. I was pretty exhausted, so I collapsed in bed, and apparently said I was hungry, so my friend went and cooked a huge egg-hashbrown-toast snack. I then refused to eat any because there were a few whole peppercorns in there by accident. Sorry, Spencer!&lt;/p></description></item><item><title>Amazon intern day 7: getting comfortable</title><link>https://joelkitching.com/amazon-intern-day-7-getting-comfortable/</link><pubDate>Fri, 06 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-7-getting-comfortable/</guid><description>&lt;p>Today was quite a long day. It started out with me considering whether or not to go look at &lt;a href="http://www.equityapartments.com/bbrochure.aspx?PropertyId=4011">Moda Apartments&lt;/a> which Aboda had suggested (their ulterior motive likely being that they like Moda because it rhymes with their name). But, after seeing some of the reviews of the place, and noting that the square footages of the units are sometimes half that of the place I am currently in, I decided that it wasn&amp;rsquo;t worth it.&lt;/p>
&lt;p>So basically I have decided (and I think convinced myself) to stay at my humble &lt;a href="http://www.sidneyapts.com/">Sydney&lt;/a> abode from Aboda, and now it just remains to see if I can get them to give me a lower rate for putting me in the wrong-sized room (which I very sincerely doubt would ever possibly happen).&lt;/p>
&lt;h1 id="i-can-has-bank-account">I can has bank account?&lt;/h1>
&lt;p>Notable event number one: I stopped by this bank called Chase (I really wasn&amp;rsquo;t sure it was a bank until I was right outside the window and I peered in cautiously) and asked if they would open an account when I hadn&amp;rsquo;t yet received a social security number. They said yes, and gave me some pamphlets, and I hurriedly said I needed to leave to get to work on time so they wouldn&amp;rsquo;t try to sell me on an account.&lt;/p>
&lt;p>Interesting fact (provided it is true): the federal government mandates that only six withdrawals (or possibly transactions?) can be made on a savings account per month. Annoying. What the hell, America.&lt;/p>
&lt;h1 id="i-forgot-my-id-badge">&amp;ldquo;I forgot my ID badge&amp;rdquo;&lt;/h1>
&lt;p>Notable event number two: walking up to the ID-checking podiums and realizing that I forgot my ID at home. I had to get a temporary replacement which says &amp;ldquo;I forgot my ID badge&amp;rdquo; on the front. Of course. Apparently I have to bring it in with my old badge in order to get it reactivated, which is slightly irksome since it means I have to bring both in on Monday. Ah well, I&amp;rsquo;m sure it&amp;rsquo;ll happen at least a few more times by the end of the summer.&lt;/p>
&lt;h1 id="a-strange-bug-fixing-pizza-jam">A strange bug-fixing pizza jam&lt;/h1>
&lt;p>Notable event number three: some strange bug-fixing-lunch-with-pizza-jam. It was more like testing&amp;mdash;we were looking to see if there were any problems with this new way of showing Prime-eligible purchases on product pages.&lt;/p>
&lt;p>Actually, for me, it consisted of first of all trying to set up a Prime trial account, second of all realizing that I couldn&amp;rsquo;t until I purchased an item, third of all looking for an item to buy (which would actually be my first ever Amazon purchase, embarrassingly enough), fourth of all realizing that the item I had chosen was Prime ineligible, and finally realizing that after deciding on something that might remotely be useful (a book by Will Ferguson, an awesome Canadian author) and inputting my credit card, my Prime trial membership was activated without even completing the purchase!&lt;/p>
&lt;p>So, instead of being useful, I spent the entire hour shopping on Amazon.com. All of the above could have been easily prevented if people working in Prime were just given Prime memberships. Simple as that.&lt;/p>
&lt;p>I should probably still make my first purchase at some point since I work there. I should take advanage of the fact that I get a 10% discount (of up to $100 for the year), that I have an American address, and that I now have a free Prime trial.&lt;/p>
&lt;h1 id="chrooting">Chrooting&lt;/h1>
&lt;p>I spent most of the rest of the work day setting up an Arch Linux chroot environment, and figuring out a set of toolchain packages that would be compatible with the ancient ones in the Red Hat Enterprise Linux distributions used on our desktops.&lt;/p>
&lt;p>At the very end of the day, I had success, with the latest git snapshot of &lt;a href="http://mpd.wikia.com/wiki/Music_Player_Daemon_Wiki">mpd&lt;/a> running with Last.fm streaming radio support, so I could do things like &lt;code>mpc load lastfm://artist/Beatles&lt;/code> and then stream Beatles music. Super cool, although probably not the best use of my time.&lt;/p>
&lt;p>I did have a long chat with Chris about the distinctions between the internal package management systems, and they are starting to make more sense.&lt;/p>
&lt;h1 id="the-interns-convene-to-feed">The interns convene to feed&lt;/h1>
&lt;p>The talk of going out for dinner was continued over the interns mailing list, and it was decided to go to the &lt;a href="http://taphousegrill.com/">Tap House Grill&lt;/a> [&lt;a href="http://www.yelp.ca/biz/tap-house-grill-seattle-3">Yelp&lt;/a>]&amp;mdash;the same one I went to on the first night with my parents, after having moved in. Somehow I ended up in charge of this event, and called and made reservations for fifteen at 6:30 PM, based off of the number of people who responded to the invite in Outlook.&lt;/p>
&lt;p>So I dashed home after work to drop my stuff off, and then headed over there and arrived only ten minutes late (read: on time). I chatted with the girl who broke the mailing list ice (Jenny) for a bit while waiting for people to arrive, although when I got there we were already about thirteen altogether.&lt;/p>
&lt;p>Shortly after that we headed downstairs into the restaurant, and proceeded to have a very nice dinner. I got to chat with about five or six other interns in my general vicinity, and luckily they all turned out to be the cool ones (the other table left early, although I can&amp;rsquo;t make any reliable judgements on how cool they really are since I didn&amp;rsquo;t even talk with them).&lt;/p>
&lt;p>It turns out that people come from very different backgrounds. Almost no one had semi-extensive prior experience with Linux, and most were Windows users. I think I may have alienated myself a little when I tried to explain tiling window managers to them (I love and use &lt;a href="http://xmonad.org/">xmonad&lt;/a> everywhere).&lt;/p>
&lt;p>Also I am not sure if this is just an edge case, but I spoke with one of the guys from Waterloo a bit about his university, and he very strongly broadcasted the opinion that his university is amazing solely based off the fact that it has very important and knowledgeable professors, whom he openly admits can&amp;rsquo;t teach worth crap. Seems a bit of a strange way to valuate your school. Well, I had Steve Wolfman, and he is one of the best CS teachers I have ever had. So there.&lt;/p>
&lt;h1 id="to-the-theatre-my-friends">To the theatre, my friends!&lt;/h1>
&lt;p>After dinner, I took my friend [&lt;a href="http://twitter.com/snoble">Steven Noble&lt;/a>&amp;rsquo;s advice, and I stuck around, saying &amp;ldquo;yes&amp;rdquo; despite the proceeding plans not necessarily sounding riveting. Said plans were to go see &lt;a href="http://www.imdb.com/title/tt0800369/">Thor&lt;/a> at the nearby theatre.&lt;/p>
&lt;p>Now I&amp;rsquo;m not a huge fan of sitting in theatres, spending money on doing so, or seeing movies I haven&amp;rsquo;t heard much about that potentially might not interest me. But I am glad I took Steven&amp;rsquo;s advice. It turned out to be a good bonding experience, wandering around, finding the theatre, heading inside, waiting for the movie to start. In fact, I quite enjoyed the movie, for what it was worth as a shoot-&amp;rsquo;em-up humans and aliens type of film. And afterwards some amusing times were had trying to find our ways home via late-night busses.&lt;/p>
&lt;p>One thing to note is that on our way to the theatre, this homeless man stopped us (which turns out to be quite common with the exceedingly vocal homeless of downtown Seattle) and said he would tell us three jokes. I couldn&amp;rsquo;t quite hear them properly, but I was told afterward that he said, &amp;ldquo;Did you hear about the guy who lost his left arm and his left leg? [silence] He was going to be all right.&amp;rdquo; That&amp;rsquo;s gold right there. Absolute gold.&lt;/p>
&lt;p>All in all, I am finally starting to settle in. At least at the current moment, I&amp;rsquo;m very confident that I&amp;rsquo;ll do fine and have a great summer.&lt;/p></description></item><item><title>Amazon intern day 6: my first commit</title><link>https://joelkitching.com/amazon-intern-day-6-my-first-commit/</link><pubDate>Thu, 05 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-6-my-first-commit/</guid><description>&lt;p>According to some memo that went out, today was Classy Thursday! (Since Classy Thursday gives new meaning to Casual Friday.) Apparently usually only this other Prime team participates in such an event, but I figured I may as well make an attempt. So off to work I went in my classy shirt and my classy tie, and my questionably classy maroon pants and my even more questionably classy old blue Adidas.&lt;/p>
&lt;p>I came across this Indian fellow in the elevator again (not the one from Amazon though&amp;mdash;this one I met a day or two ago in the elevator, and he works somewhere downtown). Most of our conversation consisted of talking about weather, which wasn&amp;rsquo;t terribly long considering after leaving the building we didn&amp;rsquo;t even go half a block before splitting up.&lt;/p>
&lt;h2 id="todays-accomplishments">Today&amp;rsquo;s accomplishments&lt;/h2>
&lt;p>Work today was a lot of listening to long, drawn-out explanations from Chris; fighting with &lt;a href="http://synergy-foss.org/">synergy&lt;/a> (I still haven&amp;rsquo;t figured out why, but the process completely freezes keyboard/mouse input in certain scenarios, forcing me to SSH into my workstation and kill the process [I later discovered this could be fixed by using a particular version on both the client and server]); and submitting my first commit through one of the tutorials on SDE Bootcamp (basically adding a line to a &amp;ldquo;guestbook&amp;rdquo; text file hosted on some webserver). I am still having a tough time making the distinction between Amazon&amp;rsquo;s two main packaging systems, but hopefully it will become clearer as time goes on.&lt;/p>
&lt;h2 id="lunch-with-a-fellow-intern">Lunch with a fellow intern&lt;/h2>
&lt;p>I decided to contact the other UBC intern (Peter) whom I met on orientation day to see if he wanted to go for lunch. Apparently he already had brought one, but we met in the cafeteria anyway, and I got an enormous salad (the limit is four toppings, but I swear the salad man put about 32 on there!). We chatted about our jobs, our housing, Vancouver, etc. Then, another intern, Joshua, appeared, apparently also in the midst of eating lunch. He sat down with us and I discovered he works in the same building as me. I unfortunately had to go right then because I had a meeting (or at least thought I did), but I did exchange phone numbers with him.&lt;/p>
&lt;h2 id="defending-your-honour-against-the-innocuous-interview-question">Defending your honour against the innocuous interview question&lt;/h2>
&lt;p>At the end of the day, a co-worker called Richard, Chris and I spent a long time discussing some interview questions. (This turns out to be one of the favourite ways to derail a fellow employee from getting his or her work done for a good part of the day.) The discussion was set off because I had thought up an answer to one Richard had mentioned at my welcoming pub night. The question was this:&lt;/p>
&lt;blockquote>
&lt;p>Given &lt;code>k&lt;/code> lists of &lt;code>n&lt;/code> sorted numbers each, how would you produce a sorted list with all &lt;code>n × k&lt;/code> numbers in it?&lt;/p>
&lt;/blockquote>
&lt;p>Here is my solution:&lt;/p>
&lt;ol>
&lt;li>Initialize a priority queue. There should be &lt;code>k&lt;/code> elements&amp;mdash;one for each list. The key is the largest element from the list, and the value is a pointer to the list. This could be implemented as a min-heap, which would allow for &lt;code>O(lg n)&lt;/code> insertions and deletions.&lt;/li>
&lt;li>Repeat until all lists are empty:&lt;/li>
&lt;li>Take the minimum key from the heap, and put the number in the sorted output list, taking note of the list from which it came.&lt;/li>
&lt;li>Next, to ensure the priority queue has a number from each of the &lt;code>k&lt;/code> lists, take the next-smallest number from this particular list (provided one still exists), and put it in the priority queue along with its list pointer.&lt;/li>
&lt;/ol>
&lt;p>Thus, since there are &lt;code>n × k&lt;/code> numbers in total, it is an &lt;code>O(n × k × log(k))&lt;/code> algorithm. After talking it over with Richard, this is apparently one of the two main solutions of the problem. (The other is a more algorithmic approach, essentially accomplishing the same steps.)&lt;/p>
&lt;h1 id="intern-dinner">Intern dinner&lt;/h1>
&lt;p>Today, there was some emailing back and forth on the intern mailing list about the interns getting together this weekend for a dinner. I think I managed to get people interested in doing something Friday night, which is good since I will have a visitor on Saturday and Sunday. Hopefully it works out and I get to hang out with some other interns!&lt;/p>
&lt;h1 id="first-thursdays">First Thursdays&lt;/h1>
&lt;p>I ran off to the &lt;a href="http://www.seattleartmuseum.org/">Seattle Art Museum&lt;/a> (often called SAM), since it is free on the first Thursday of the month. The museum wasn&amp;rsquo;t quite as impressive as I&amp;rsquo;d hoped, but I did really enjoy some of the modern art there. Also, for whatever reason, perhaps because of the current exhibits or the free Thursday event, there was a strange DJ playing ridiculously loud music from their lobby, which essentially reverberated throughout their entire two upper levels of exhibits, ruining the regular quiet museum feeling. Also, their main exhibit involved people dressing in weird outfits with lots of fuzzy and strange-looking clothing. Seattle, you are odd.&lt;/p>
&lt;p>Later on, I would discover just how well-known and widely-celebrated &lt;a href="http://www.firstthursdayseattle.com/">First Thursdays&lt;/a> are. It is an must to check out while in Seattle over the summer. A few museums open up for free, and there is an awesome art walk that goes down in the &lt;a href="http://maps.google.ca/maps?q=pioneer+square+seattle&amp;amp;hq=&amp;amp;hnear=Pioneer+Square,+Seattle,+King,+Washington,+United+States&amp;amp;ll=47.608015,-122.333193&amp;amp;spn=0.044037,0.033989&amp;amp;t=m&amp;amp;z=14&amp;amp;vpsrc=0&amp;amp;iwloc=A">Pioneer Square&lt;/a> area of downtown Seattle. My absolute favourite was the &lt;a href="http://www.firstthursdayseattle.com/profile.php?id=97">619 Western Ave Arts Building&lt;/a>, a five-story building full of open studios during the art walk. Unfortunately, it says they are no longer able to participate&amp;mdash;I am not sure why, but it is very sad!&lt;/p>
&lt;p>There are also smaller art walks, such as the &lt;a href="http://www.blitzcapitolhill.com/">Blitz Capitol Hill Art Walk&lt;/a>, but First Thursday&amp;rsquo;s art walk is the grandaddy.&lt;/p>
&lt;h1 id="graebel-housing-option-number-two">Graebel housing option number two&lt;/h1>
&lt;p>After the SAM, I checked out the next possibility that Graebel/Aboda had offered me earlier on today. It&amp;rsquo;s literally a block and a half away from my current place, and it looks decent. I might try to see if I could tour any units tomorrow morning before work&amp;mdash;but I am still very strongly considering just staying in my current place, despite the extra cost.&lt;/p>
&lt;h1 id="cinco-de-ignoro">Cinco de Ignoro&lt;/h1>
&lt;p>Finally, I got back to my place, and decided to go check out the tail end of the Cinco de Mayo festivities occurring in the clubroom. (I had seen posters up around the apartment building advertising the event.) It was extremely bizarre&amp;mdash;I got in there and there were two tables occupied, and people both vaguely said &amp;ldquo;hello&amp;rdquo; to me as I walked in. So I asked if there was more food, and they muttered &amp;ldquo;yes&amp;rdquo; and one said &amp;ldquo;certainly, help yourself to some burritos.&amp;rdquo;&lt;/p>
&lt;p>I grabbed one, and then half-heartedly sat down at one of the tables. Everyone there seemed to be deep in discussion, but you would think that they would at least say &amp;ldquo;hello&amp;rdquo; to me. Nothing! No &amp;ldquo;are you new
here,&amp;rdquo; no &amp;ldquo;where are you from,&amp;rdquo; just continuing their current discussion, and ignoring my existence.&lt;/p>
&lt;p>So, I got up, walked over to the counter for something, and tried the next table. Same thing! They seemed very deep in discussion about education systems, which is perhaps one possibility as to why they might not have bothered welcoming the newcomer. But I suspect they probably saw some kid who looked ten years younger than them and they decided not to act as though I was a regular human being. Go figure, Seattle.&lt;/p></description></item><item><title>Amazon intern day 5: SDE Bootcamp</title><link>https://joelkitching.com/amazon-intern-day-5-sde-bootcamp/</link><pubDate>Wed, 04 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-5-sde-bootcamp/</guid><description>&lt;p>I&amp;rsquo;m pretty exhausted right now and it&amp;rsquo;s already half-past midnight, so this may have to be a somewhat abridged post. Today was probably my most productive day in terms of not having zillions of meetings to go to, and starting the SDE Bootcamp that they keep telling me to work on.&lt;/p>
&lt;p>This morning was sort of nice&amp;mdash;I bumped into the Kindle guy on my way out from my apartment and we chatted all the way to work. Apparently he has only been there five months or so. And of course I got lost again and had to backtrack to find my own building.&lt;/p>
&lt;h2 id="configuration-and-sde-bootcamp">Configuration and SDE Bootcamp&lt;/h2>
&lt;p>But basically my day consisted of continuing to configure my computers, signing up for a shit ton of internal mailing lists, setting up filters for said mailing lists in Outlook so as not to be constantly inundated with new and irrelevant mail, and working through the SDE Bootcamp (a document full of short tutorials on Amazon&amp;rsquo;s code repositories, build systems, etc.) to ramp up and learn how the heck everything works internally at Amazon.&lt;/p>
&lt;p>I think I&amp;rsquo;m starting to get the hang of it. There are basically just custom-built systems for everything, from packaging to building to&amp;hellip; well, conference room allocation. And each one has a strange code name (usually with an obligatory acronym), and interacts with other systems in a variety of different ways under different situations. Simple, right?&lt;/p>
&lt;h2 id="one-on-one-with-mark">One-on-one with Mark&lt;/h2>
&lt;p>Two notable things today: the first was my one-on-one meeting with my manager, Mark. It was actually somewhat useful to tell him where things stand with my progress, and it was nice to hear him assure me that it was their priority to get me to have a good understanding of internal systems &lt;em>before&lt;/em> forcing me into choosing a project to work on.&lt;/p>
&lt;p>Also, I got a chance to ask him whether it would be possible to take a week of unpaid vacation off in the middle of summer. It sounded like it wouldn&amp;rsquo;t be a problem if it was up to him, but he said he would look into the proper procedure.&lt;/p>
&lt;h2 id="lunch-with-chris">Lunch with Chris&lt;/h2>
&lt;p>The other notable thing was lunch with Chris. We went to the other building&amp;rsquo;s cafeteria and met his friend from Florida, Steven, who seemed pretty cool. Apparently this was the friend with whom Chris had built some machine learning system off of Digg data, which is how they initially got Amazon interested in hiring them. Now, Steven works on the category suggestions block on the left-hand side of an page when doing a search on Amazon.&lt;/p>
&lt;p>Also, it seems he speaks some Chinese and travelled to China for a while, which was cool to hear, given my own interest in the language and country! While we chatted, I ate the fish curry, which was actually quite filling and not too bad.&lt;/p>
&lt;h2 id="graebel-offers-an-apartment">Graebel offers an apartment&lt;/h2>
&lt;p>Today I received an email from Graebel, the relocation company, and they said that Aboda is offering a two-person place at &lt;a href="http://www.dexterlakeunion.com/">Dexter Lake Union&lt;/a> (&lt;a href="http://www.apartmentratings.com/rate/WA-Seattle-Dexter-Lake-Union.html">Apartment Ratings&lt;/a>). Based on looking at a map, it appears to be the same distance from the Amazon campus as my current apartment, but further away from the city and civilization.&lt;/p>
&lt;p>So, after work, I walked over there to investigate, and boy am I glad I did. It is basically stuck in the buttcrack of two highways. As such, you can barely hear yourself when leaving (and I imagine when living in) the apartment. The walk to work looks like it would be extremely unpleasant, and might have the perk of two or three minutes walking along a grassy park area of South Lake Union if you go the right way.&lt;/p>
&lt;p>In general, that area of town gave me a really bad impression, as it was almost entirely composed of loud, smelly highways, some industrial things in between, mixed with a dash of construction. So I emailed my Graebel contact this evening and told him that I would rather either (a) stay here or (b) find a place in Belltown or Denny Triangle. It is very useful to actually be able to refer to the areas of Seattle now that I know where they are.&lt;/p>
&lt;h2 id="top-pot-doughnuts">Top Pot Doughnuts&lt;/h2>
&lt;p>After getting back to Belltown, I stopped by &lt;a href="http://www.toppotdoughnuts.com/">Top Pot Doughnuts&lt;/a> [&lt;a href="http://www.yelp.ca/biz/top-pot-doughnuts-seattle">Yelp&lt;/a>], and grabbed a maple bar to ease my nerves after so much asphalt. The last time I had visited Seattle on a road trip, my friend had introduced me to this wonderful place. The doughnuts are some of the best I have ever eaten. (Later on in my internship I ended up visiting the ridiculously popular &lt;a href="http://voodoodoughnut.com/">Voodoo Doughnut&lt;/a> [&lt;a href="http://www.yelp.ca/biz/voodoo-doughnut-portland">Yelp&lt;/a>] only to be sadly disappointed by overrated, much-too-sweet doughnuts. I far prefer Top Pot.)&lt;/p>
&lt;p>I sat down with my doughnut and opened up my laptop, but my internet didn&amp;rsquo;t work, which was perhaps for the best, so I sat there eating, drinking water, and staring around at their quite intriguing interior design, consisting of stacks and stacks of bookcases along the full length of the two side walls filled, with old bound books.&lt;/p>
&lt;p>Finally, I got home at about 7 PM, and collapsed on the floor reading for a while. Then I somehow got into this weird sleepy state where I laid on the bed and half-fell asleep as the sun went down, and didn&amp;rsquo;t manage to get up until almost 10 PM. So now I am relatively awake considering the time, but I really need to sleep since I&amp;rsquo;ll be up in 7 hours!&lt;/p></description></item><item><title>Amazon intern day 4: meetings</title><link>https://joelkitching.com/amazon-intern-day-4-meetings/</link><pubDate>Tue, 03 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-4-meetings/</guid><description>&lt;p>Today was fairly exhausting, and chock-full of meetings around the clock. I think in total I had about two hours or so sitting at my desk actually doing semi-useful work setting up my workspace. (I still haven&amp;rsquo;t started the SDE Bootcamp, which my mentor, Chris, keeps asking me about!)&lt;/p>
&lt;p>I woke up this morning, showered, had one of the bagels I bought yesterday for breakfast, and walked over to South Lake Union. It turns out that on my way, I started to cluster with bunches of other Amazon employees at intersections waiting for lights to turn. I didn&amp;rsquo;t bother attempting conversation though, as they all seemed very much in their own worlds.&lt;/p>
&lt;p>I got slightly lost and had to consult my map to find my building. I had the impression it was closer to the lake than it was, and so I had to backtrack a bit to get there in the end.&lt;/p>
&lt;h2 id="meeting-madness">Meeting madness&lt;/h2>
&lt;p>I made my way up the elevator and discovered that I was the first one to arrive in my area. Shortly after, Chris arrived, and we went off to our first meeting. It was utterly bizarre&amp;mdash;a strange collection of people from different Prime teams sat in a conference room on call with someone in India. What was discussed was a bit over my head, but I think mainly the idea was to find out if all of Prime services were working properly and fast enough, setting up actionable work to fix anything if necessary.&lt;/p>
&lt;p>The second meeting of the day, almost directly after that, was with my mentor, Chris, and my manager, Mark. They essentially gave me a very high-level overview of Prime and its technical back-end workings, as well as probing me for some of my own background and what I might be interested in working on. Mark tried to pin me down on whether I found working on back-end stuff or front-end stuff more interesting, and I think I managed to convey to him that it somewhat depended on the project, and that I might be okay with either (which, incidentally, ended up being his own opinion on the matter as well).&lt;/p>
&lt;p>Following that, meeting number three. All of the engineers from the different Prime teams sat in a room and discussed some strange things with many technical terms and acronyms that I had no hope of understanding. (This meeting turned out to be a weekly one that I was expected to attend, and even after the bulk of my internship I still didn&amp;rsquo;t understand a lot of what they spoke about!) I was in the meeting as well, and people were encouraged to come down with Mark and Chris and I to the &amp;ldquo;tavern&amp;rdquo; after work for a pint or two (or, as was joked, a liter, and later on I corrected, a litre).&lt;/p>
&lt;h2 id="lunch-and-yet-another-gorgeous-view">Lunch, and yet another gorgeous view&lt;/h2>
&lt;p>Then, another brief reprieve, and Chris and I headed downstairs for lunch in the cafeteria, after trying to convince two people from our sister team to join us (apparently there are varying opinions on the quality of the cafeteria food). I ended up seeing Josh there, whom I had met on the orientation day, and the three of us sat for lunch. Afterwards, Chris showed us the top floor of the building, where you could see an even more amazing view than from our floor of South Lake Union and the surrounding area. I&amp;rsquo;d love to go up there on a nice day for lunch, or perhaps even to see the sunset one evening!&lt;/p>
&lt;h2 id="workstation-set-up">Workstation set-up&lt;/h2>
&lt;p>After lunch, I had a bit more time to set my workstation up, and then there was a fourth meeting. It was for a sort of grassroots project, which from a high level, essentially optimizes for which Prime-related messages to show. It was very hard to make heads or tails of what was being said, but it is apparently one of the projects I might work on.&lt;/p>
&lt;p>Finally (finally!) I had the bulk of my time to set up my computer, and I actually miraculously got (a) the Windows laptop that they gave us somewhat in a usable state, with Windows 7 graphics disabled and my &lt;a href="http://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">keyboard layout&lt;/a> working, and (b) I managed to munge abuse their Linux distribution enough to get &lt;a href="http://xmonad.org/">xmonad&lt;/a> installed, with some dotfiles from my personal laptop, to bootstrap to a somewhat familiar environment.&lt;/p>
&lt;h2 id="to-the-pub">To the pub!&lt;/h2>
&lt;p>At around 5 PM, Chris and Mark and I headed down to the &lt;a href="http://bravehorsetavern.com/">Brave Horse Tavern&lt;/a> (the name of which is likely the reason for the previous use of the word &amp;ldquo;tavern&amp;rdquo; instead of &amp;ldquo;pub&amp;rdquo;) and got started on the pretzels and deep-fried cheese curds. Both were alarmingly good; especially the cheese curds. Beer was had, some people from our sister team came down, I got to know some people a bit better, and then at around 7 PM people faded out and we all left to go home. They were all kind enough to pay for my share of the food and drinks, which was extremely thoughtful (thank you again!).&lt;/p>
&lt;h2 id="kerry-park">Kerry Park&lt;/h2>
&lt;p>I returned home, went out briefly with Angela and our mutual friend from UBC, Grayson (who is leaving for China this weekend for an extended period of time), and we went to &lt;a href="http://en.wikipedia.org/wiki/Kerry_Park_(Seattle)">Kerry Park&lt;/a>, where there is a gorgeous view of downtown Seattle. It is apparently the only place where you can actually see the Space Needle in the skyline&amp;mdash;and so essentially that is the only place where people take photos of iconic Seattle.&lt;/p>
&lt;p>After that brief trip, I tried out the hot tub in my apartment complex, and headed back upstairs, exhausted for the night.&lt;/p></description></item><item><title>Amazon intern day 3: first day at Amazon</title><link>https://joelkitching.com/amazon-intern-day-3-first-day-at-amazon/</link><pubDate>Mon, 02 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-3-first-day-at-amazon/</guid><description>&lt;p>I set my alarm for 8 AM, but woke up of my own accord. I showered, attempted to extract a semi-professional outfit from my still very packed collection of clothing, and then called Aboda about housing. Apparently they can&amp;rsquo;t do anything without authorization from Graebel. So then I called Graebel.&lt;/p>
&lt;h1 id="the-housing-crisis-continues">The housing crisis continues&lt;/h1>
&lt;p>The man from Graebel with whom I spoke said that he would call Aboda and look into possible options, and might also be able to see if Amazon would further subsidize the $900/mo place so as to avoid further inconvenience for me. I probably should have made it clear that this was the preferred option. He said he would call right back (yeah right) after talking to someone at Aboda. At this point it was just a waiting game until I had to leave for work, and then I might not have a chance to call them again until after business hours. Oh boy.&lt;/p>
&lt;p>After tapping my fingers and toes for a bit, I gave up waiting and just followed up with my Graebel contact in an email saying I would prefer a subsidy for living in the current place I have, but would also like to consider any options of moving in with a roommate.&lt;/p>
&lt;h1 id="first-encounter">First encounter&lt;/h1>
&lt;p>I grabbed all of my stuff (mostly identification documents) and headed to Amazon for my first day. When I arrived at their lobby, there were about 25 students waiting around. I chatted with two of them for a bit, and worked up the nerve to ask them for their names and numbers. I&amp;rsquo;m very aware that I have to be extremely proactive if I wanted to build myself a social life here, so I figure I will take every chance I can get.&lt;/p>
&lt;p>Later on, we were herded into a room where we had some minimal lunch (catered sandwiches), and did some more mingling. I actually found one other student from UBC in the engineering program, which was very cool! I also came across a UVic student, and a Waterloo student who was originally from Vancouver. The vast majority of the other students were all from Waterloo. I think it is because most American universities haven&amp;rsquo;t gotten out yet. Anyways, in said room, we ate lunch, continued to mingle, and then were presented quite a long talk about Amazon culture, things to do in Seattle, and things to do at Amazon.&lt;/p>
&lt;h1 id="forms-forms-and-more-forms">Forms, forms, and more forms&lt;/h1>
&lt;p>After that, we were herded into another building where we got our &lt;a href="http://en.wikipedia.org/wiki/ORCA_Card">ORCA passes&lt;/a>. These wonderful little guys will get you onto any public transit in the greater Seattle area free of charge&amp;mdash;including the Light Rail that takes you to the airport. Woohoo! Now I just need an opportunity to use it&amp;hellip; this is one of the few downsides of living within walking distance to work.&lt;/p>
&lt;p>Then, we were led into a conference-type room with mounds of forms in front of us. After settling in there, we were brought temporarily to another room to fill out some web-application form with our work permit authorization information. After that, I begrudgingly gave up my passports for them to process while we all returned to our conference room. (Only later would I realize how important the conference room is to corporate culture!)&lt;/p>
&lt;p>There, it was a lot of hearing about forms, filling out forms, and getting pressured into signing forms without having the chance to read what signing them actually meant. (If anyone from HR at Amazon is reading this&amp;mdash;please give people more time to read these forms, or send them in advance for people to review!) We were told more information about Amazon and its intranet, shown an inspirational video of Bezos, and then our badges and passports arrived. Amazingly, I think the picture on mine is one of the best ones I have gotten on any piece of ID.&lt;/p>
&lt;p>One point of confusion was the difference between our laptops and our desk workstations. It wasn&amp;rsquo;t even made clear at first that we had workstations at our desks. And so, when we were told that in no case is it allowed to install an operating system other than the default Windows on our laptops, or even any third-party software, I was slightly confused. But later on, I essentially discovered that the laptop is mainly used for word-processing, emailing, and non-technical tasks, while the workstation (which runs Red Hat Enterprise) is used for everyday development. It&amp;rsquo;s also possible to have one machine&amp;rsquo;s keyboard and mouse control both (see &lt;a href="http://synergy-foss.org/">synergy&lt;/a>).&lt;/p>
&lt;p>We were then distributed laptops and backpacks. Unfortunately we were not able to keep the backpacks&amp;mdash;as you may discover, Amazon likes to be frugal in every sense of the word, and so swag is hard to come by. But we did end up having awesome messenger bags given to us for keeps later on!&lt;/p>
&lt;p>Finally, we all headed downstairs to meet our managers, by which time it was about 3:30 PM.&lt;/p>
&lt;h1 id="welcome-to-prime">Welcome to Prime&lt;/h1>
&lt;p>I met my manager, Mark Aiken, and he led me towards our building, SEA27, where we went up to the ninth floor. I was introduced to my sole other teammate, Chris (who would double as my mentor, and with whom I would become good friends), and shown the gorgeous view of Lake Union. Yep, it just so happens that I lucked out and was placed on the ninth floor of a building facing Lake Union, with my desk even pointing in that direction. Awesome!&lt;/p>
&lt;p>Following that, I was taken around the Amazon Prime area of the floor where I met about 30 other people whose names I have all already forgotten. We came back to my cubicle, where I got my head talked off about different technologies (and acronyms&amp;mdash;always acronyms) that I don&amp;rsquo;t understand, and finally it was time to head home (after staying late on my first day until about 5:45 PM!). Apparently we might go out for drinks tomorrow after work, which would be fun.&lt;/p>
&lt;h1 id="dinner-with-a-friend">Dinner with a friend&lt;/h1>
&lt;p>I rushed home, bought bagels en route, and then headed out to meet my friend Angela, who used to go to my university in Vancouver, for dinner at Pike Place Market. (On the way out from my apartment, I actually came across a guy I had met on my move-in day in the elevator. I told him it was my first day of working in Seattle, he asked me where, I said &amp;ldquo;Amazon,&amp;rdquo; he asked me what team, I said &amp;ldquo;Prime,&amp;rdquo; and then he told me he worked on the Kindle team. What a small world!)&lt;/p>
&lt;p>Angela and I went to the &lt;a href="http://www.pikebrewing.com/pub.shtml">Pike Brewing Company Pub&lt;/a>, and had burgers (great burgers but on the expensive side). It was good to catch up with her, and I am very glad to know someone who lives nearby! Hopefully we will hang out again soon.&lt;/p>
&lt;p>I then almost got lost, and headed home amidst throngs of sketchy people downtown. I realized that my area of town, Belltown, is probably one of the safest ones. I got home, talked on the phone for a good hour with the parental units, and finally had a break before the next day&amp;rsquo;s undertakings&amp;hellip;&lt;/p></description></item><item><title>Amazon intern day 2: exploration</title><link>https://joelkitching.com/amazon-intern-day-2-exploration/</link><pubDate>Sun, 01 May 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-2-exploration/</guid><description>&lt;p>I woke up very early, at around 8 AM, unable to pretend to sleep any longer. I took a shower in my new bathroom, and messed around on my computer for a bit. My parents finally woke up and got ready at their hotel, and came over to my apartment at around 10 AM.&lt;/p>
&lt;p>We decided to head over to this restaurant called Lola for breakfast. I had found the place on Yelp based on its high user ratings, and we were certainly not let down. Wonderful donuts with marscapone, eggs benny with a hollandaise sauce to die for, and a sausage filled with so much flavour that one wonders why all other sausages, well, suck so much. The meal did come with an appropriate price tag, though!&lt;/p>
&lt;h1 id="exploring-the-area">Exploring the area&lt;/h1>
&lt;p>After that, we walked over to Amazon&amp;rsquo;s headquarters, and found the building where I am to report tomorrow morning, at 550 Terry Ave North. The route from my apartment only took fifteen minutes to walk, which would be wonderful if I end up staying there! We wandered around the campus a bit, confused about which buildings belonged to Amazon and which didn&amp;rsquo;t.&lt;/p>
&lt;p>I&amp;rsquo;ll hold final judgement for my first day, but based on some photos that I had seen, I sort of preferred the unique look of the former headquarters at the PacMed Center on Beacon Hill, over the modern face of the new buildings in South Lake Union. Although I did enjoy the cute &amp;ldquo;Welcome Amazonians!&amp;rdquo; sign in the lobby.&lt;/p>
&lt;p>After looking around the area a bit, we headed back to my place, and en route, stopped by an extremely expensive grocery store called Whole Foods which only had &amp;ldquo;organic&amp;rdquo; things, so of course they can charge double the usual price. (I later discovered that Amazon employees consist of quite a captive audience in the South Lake Union area, and so Whole Foods, as well as the numerous restaurants in the area, enjoy booming business.) I bought barely anything, since I again didn&amp;rsquo;t want to add too much to my burden which would have to be relocated if I decide to move.&lt;/p>
&lt;p>We got back to my apartment, I unpacked the food, and then we went out for a short drive around town, and again were painfully reminded that Seattle is an extremely difficult city to navigate by vehicle! To get back to my apartment, we literally had to circle the city in five different ways, and exercise our brains in travelling down one-way streets and taking only right or left turns. Finally we made it, I said goodbye to my dad and step-mom, and they were off, returning to Vancouver.&lt;/p>
&lt;h1 id="all-alone">All alone&lt;/h1>
&lt;p>It certainly is a different feeling being in a different city, but being in a different city effectively all alone is another sentiment altogether. I went back up to my apartment, napped, sat around for a while, and had some left-overs from yesterday&amp;rsquo;s dinner.&lt;/p>
&lt;p>Finally, I decided that I had better enjoy &lt;strong>some&lt;/strong> of the last rays of sunshine of the day, so I headed out with no concrete plan, and basically wandered the city, from Belltown in the north, all they way to some sketchier parts of town near the International Village area in the south, and then back again.&lt;/p>
&lt;p>From walking around and seeing people out and about, I was surprised at how much more of a black population there is here when compared to Vancouver, a mere 200 kilometres up north.&lt;/p>
&lt;h1 id="how-do-i-meet-people">How do I meet people?&lt;/h1>
&lt;p>I returned to my apartment, sat around chatting with people online for a while, and tried to figure out ways I could meet people in a new city. Things I came up with: take an improv class; take a yoga class; find a sport to start playing; see if I can hang out with any co-workers. A fairly small list.&lt;/p>
&lt;p>Monday after work, I&amp;rsquo;m planning on meeting up with a friend who lives somewhere in the area, so perhaps she could introduce me to some people my age too.&lt;/p>
&lt;p>I then read some of my book (normally unheard of), and headed to bed.&lt;/p></description></item><item><title>Amazon intern day 1: move-in</title><link>https://joelkitching.com/amazon-intern-day-1-move-in/</link><pubDate>Sat, 30 Apr 2011 00:00:00 +0000</pubDate><guid>https://joelkitching.com/amazon-intern-day-1-move-in/</guid><description>&lt;p>I received my housing assignment with Amazon&amp;rsquo;s corporate housing company, Aboda, on Thursday (a mere two days ago). Amazon subsidizes housing, and offers interns two options: the first is to take $1000 extra on your paycheque each month, with which you may do what you please in finding your own housing. The other option is to use their relocation company, Graebel, which provides you with a fully-assisted move, including housing through Aboda.&lt;/p>
&lt;h1 id="aboda-apartment-costs">Aboda apartment costs&lt;/h1>
&lt;p>Three types of apartments are available, charged as follows: $500 for a studio, $600 for a two-person apartment, and $900 for a one-person apartment. The first two seemed reasonable, but the last seemed somewhat exhorbitant&amp;hellip;especially when you consider that instead of receiving $1000, you are paying $900, which would make the one-person apartment conceivably worth $1900 per month.&lt;/p>
&lt;p>Based on the move-in information that was emailed to me, I wasn&amp;rsquo;t sure if I had been assigned a studio or a one-person apartment (you are able to specify a preference, but no guarantees can be made). I emailed my contact at Aboda and didn&amp;rsquo;t hear back from her, so I frantically called on Saturday to find out that I was indeed in a one-person apartment.&lt;/p>
&lt;p>I had definitely requested a two-person apartment! This was unfortunate on two counts&amp;mdash;I thought it could turn out fun to have a roommate, and I also felt like $900 per month was a bit much for rent. Regardless, the weekend-hours person at Aboda with whom I spoke recommended that I just move in and deal with it on Monday during their business hours.&lt;/p>
&lt;h1 id="packing-and-a-bailing-subletter">Packing, and a bailing subletter&lt;/h1>
&lt;p>So, begrudgingly, I packed up all of my things. I live in Vancouver, British Columbia, which is incidentally only a few hours drive north of Seattle. This had the useful side-effect of being able to bring as much as I desired to my new flat. The apartment Aboda provides comes fully-furnished though, which is especially handy for interns who are flying in from afar.&lt;/p>
&lt;p>For myself, packing took quite a while, even without any kitchen items. For whatever reason, I have collected a lot of crap over the years! Also, unfortunately in the midst of packing, I discovered that my subletter had just bailed out of taking my room in Vancouver over the summer, which really sucks to find out the day before the first of the month. This caused a significant delay in packing while I tried to figure out the best course of action. But I had to carry on, if I was to move in that day!&lt;/p>
&lt;h1 id="welcome-to-america">Welcome to America&lt;/h1>
&lt;p>Finally, at around 3 PM, I was ready to drive down. My dad and my step-mom were taking me. We got to the border, declared that I wanted to enter on a J-1 visa, and were asked to go park off to the side and head into their customs building. We went in, waited about fifteen minutes, and after a $6 USD processing fee, we were off, without the customs officer going through any of my things! Woohoo!&lt;/p>
&lt;p>One and a half hours later, we had arrived in the outskirts of Seattle (it is definitely closer to the border than I realized). It took us about a half hour to find the place where we needed to pick up my keys, and then about another fifteen minutes to find my actual place.&lt;/p>
&lt;p>A note to those new to driving in Seattle&amp;mdash;beware the dreaded one-way road! These are everywhere in the downtown area, and you can end up driving in many circles before getting to where you want to go. If you don&amp;rsquo;t have a native with you, it&amp;rsquo;s best to look up directions beforehand or use a GPS device.&lt;/p>
&lt;p>After arriving at my new place, there was some confusion in the parking garage, since we weren&amp;rsquo;t sure where where to leave the truck while moving in. But we settled on making use of the handicapped spot, and moved everything upstairs in bulk in only two or three elevator trips.&lt;/p>
&lt;p>The place itself is (mostly) gorgeous. First, the bad: right as you walk in the front door, it has a useless den off in the corner to the side, with no windows or light whatsoever! As I very much enjoy natural light, I basically used this area for storage. Next, the better: a very spacious living room/dining area with a fireplace, a tiny half-foot deck looking out towards the water (western exposure, which is good news for getting some after-work rays), a huge bedroom with bay-style windows, a spacious walk-in closet, a nice bathroom, and a fairly typical kitchen with a washer and dryer mashed into it. We left all of my boxes in the den, and I was pretty much unable to unpack anything, since I wasn&amp;rsquo;t sure whether I was going to be moving again.&lt;/p>
&lt;h1 id="seattle-geography">Seattle geography&lt;/h1>
&lt;p>Now, a bit of a geography lesson. Seattle proper is split up into fairly distinct areas, each with its own personality and feel. First, there&amp;rsquo;s the Commercial District, which is what people would normally think of as the &amp;ldquo;downtown core.&amp;rdquo; Just north of that at about a ten-minute walk is Belltown, where I live. It&amp;rsquo;s sort of seen as the mid-twenties-to-early-thirties-young-up-and-coming-professionals dining/entertainment district. (Belltown just so happened to be where I ended up going out most of the time with other interns, so it turned out to be an ideal place to live.)&lt;/p>
&lt;p>Other notables are the South Lake Union District, where the Amazon buildings are located (about a ten-minute walk away from Belltown); Seattle Center, which has the Space Needle, the Experience Music Project, etc. (about a five-minute walk away); the University District (a twenty-minute bus ride away); and the party-goer&amp;rsquo;s dream, Capitol Hill (often considered the &amp;ldquo;gay area&amp;rdquo; of town, at about a ten-minute bus ride away, or a cold 25-minute walk home if the busses have stopped running).&lt;/p>
&lt;p>It took me a few weeks to get a very solid feel for the different areas and how to get in between them, but in my opinion Belltown was the ideal location to be while working at Amazon in the South Lake Union area. For reference&amp;rsquo;s sake, the apartment where I lived is called &lt;a href="http://www.sidneyapts.com/">Sydney&lt;/a>, and it is located at 400 Wall St, which is at the intersection of 4th Ave and Wall St.&lt;/p>
&lt;h1 id="dinner-and-the-first-sleep">Dinner and the first sleep&lt;/h1>
&lt;p>After unpacking, we headed downtown by foot to find some dinner. After wandering around and looking at a few menus, we found this neat bar called &lt;a href="http://taphousegrill.com/">Tap House Grill&lt;/a> [&lt;a href="http://www.yelp.ca/biz/tap-house-grill-seattle-3">Yelp&lt;/a>] with about 150 beers on tap, and excellent food! My dad of course attempted to embarrass me by asking the waitress what a &amp;ldquo;young twenty-something&amp;rdquo; could do in Seattle while living in Belltown. She gave a fairly inconclusive response, although gave us the equivalent of Vancouver&amp;rsquo;s Georgia Strait newspaper (which is typically filled with different events and concerts going on, listings of clubs, etc.) called The Sounder.&lt;/p>
&lt;p>We walked back to my parents&amp;rsquo; hotel, checked them in, then walked back to mine, and then they left to go home for the night. I had a terrible sleep, tossing and turning to the sound of firetrucks going by apartment (the firehall is just down the street on 4th). I continually struggled with the bedsheets, attempting to make them comfortable, and tried to ignore the large amount of ambient city light streaming in through the blinds.&lt;/p></description></item><item><title>Randy Hnatko: transactional analysis</title><link>https://joelkitching.com/randy-hnatko-transactional-analysis/</link><pubDate>Fri, 10 Jul 2009 00:00:00 +0000</pubDate><guid>https://joelkitching.com/randy-hnatko-transactional-analysis/</guid><description>&lt;p>I just watched Randy Hnatko, a sales training specialist working at &lt;a href="http://www.tmcinc.sandler.com/">Sandler Training&lt;/a> present on the topic of transactional analysis. Transactional analysis &amp;ldquo;is an integrative approach to the theory of psychology and psychotherapy [with] elements of psychoanalytic, humanist and cognitive approaches&amp;rdquo; (from &lt;a href="http://en.wikipedia.org/wiki/Transactional_analysis#The_Ego-State_.28or_Parent-Adult-Child.2C_PAC.29_model">Wikipedia: Transactional analysis&lt;/a>).&lt;/p>
&lt;p>According to the theory, there are three ego states: &lt;strong>parent&lt;/strong>, &lt;strong>child&lt;/strong>, and &lt;strong>adult&lt;/strong>. I will give a quick summary of what Randy said about each one.&lt;/p>
&lt;h1 id="parent-state">Parent state&lt;/h1>
&lt;p>There are two main types of parent egos. The first is critical and negative, and the second is nurturing and caring. Typically with parents, the father falls into the first category and the mother into the second.&lt;/p>
&lt;p>&lt;strong>The father is judgmental&lt;/strong> and tells his child what is right or wrong. He makes very black-and-white statements, either agreeing or disagreeing. He says &amp;ldquo;You should not do this&amp;rdquo; and &amp;ldquo;You should do that&amp;rdquo; with the pointing motion we have learned to associate with critical judgments. Because of this, we have learned to shut down and not open up in these situations. And by extension, when we encounter people who are critical in real life, we have a tendency of not opening up to them.&lt;/p>
&lt;p>&lt;strong>The mother is nurturing&lt;/strong>, caring, empathetic, warm and supportive. When you are in pain or uncomfortable, the mother will try and help you and make you feel better. She will not make judgments about how you got to that point, or tell you that you should not complain.&lt;/p>
&lt;p>For example, consider a boy who has just had his dad teach him to ride a bike. The parents are extremely proud, and the child is able to go out and ride his bike without supervision. He makes a sharp turn and falls off, scraping his knee, and comes running home crying to his parents.&lt;/p>
&lt;p>The dad&amp;rsquo;s judgmental reaction will be, &amp;ldquo;Why did you fall off your bike? I taught you how to ride a bike. You shouldn&amp;rsquo;t have been reckless and fallen off like that.&amp;rdquo; The mother&amp;rsquo;s nurturing reaction will be &amp;ldquo;Oh let me see your knee. Does it hurt? Let me kiss it better. I&amp;rsquo;ll put a band-aid on it for you,&amp;rdquo; giving the child a hug and comforting him.&lt;/p>
&lt;h1 id="child-state">Child state&lt;/h1>
&lt;p>There are three types of child states. The natural child, the adaptive child, and the rebellious child.&lt;/p>
&lt;p>&lt;strong>The natural child&lt;/strong> is carefree, joking, and spontaneous. He or she is the child who will step in a rain puddle without thinking about the consequences and get his or her clothes all dirty, as well as other passersby. &amp;ldquo;Oops!&amp;rdquo; the child will say. The natural child is relaxed and playful, and will make jokes without thinking about whether said jokes end up being offensive.&lt;/p>
&lt;p>&lt;strong>The adaptive child&lt;/strong> seeks approval. He or she was exposed to a lot of criticism when growing up, and so the adaptive child is always seeking to get approval from others. An example of this is in the Asian culture, where parents typically push their children to get good grades in school, to work really hard and to succeed. The adaptive child will always bend and flex and do whatever is needed to gain acceptance.&lt;/p>
&lt;p>&lt;strong>The rebellious child&lt;/strong> puts up walls. When he or she is challenged, an automatic response is to say, &amp;ldquo;Don&amp;rsquo;t tell me what to do,&amp;rdquo; and stop listening to whomever is doing the criticizing. The rebellious child will take offense to an off-hand remark or joke that does not agree with him or her. Sometimes the rebellious child can be a bully to others.&lt;/p>
&lt;h1 id="adult-state">Adult state&lt;/h1>
&lt;p>&lt;strong>The adult ego state&lt;/strong> is the logical one. It is the Mr. Spock&amp;mdash;the referee between the child and the parent. It knows to look at issues methodically and logically, and sees when emotions are not applicable and need to be put aside for the time being.&lt;/p>
&lt;h1 id="applications-to-sales">Applications to sales&lt;/h1>
&lt;p>In sales, there are two goals. The first is to &lt;strong>make sure people don&amp;rsquo;t perceive us as being critical&lt;/strong>. Being critical causes either a rebellious child or an adaptive child to show up in a prospect. To avoid being perceived as critical, you need to talk from your nurturing side, which is typically more difficult for men.&lt;/p>
&lt;p>The second goal is to &lt;strong>get the prospect&amp;rsquo;s child state and emotion on the table&lt;/strong>, since it is the most liberal in making buying decisions, which is arguably something you cannot easily encourage. An adult state is usually the most useful for this application however. Make sure to avoid a situation where you are the one with emotion on the table, because it can easily cause you to accept a non-advantageous deal or to become confrontational yourself.&lt;/p>
&lt;p>Typically a combination of 70% nurturing state and 30% adult state can be ideal when approaching a prospect. You don&amp;rsquo;t want to joke around too much, to be rebellious, or adapt to unrealistic needs, so keep your child state in check.&lt;/p>
&lt;h1 id="an-example-sale">An example sale&lt;/h1>
&lt;p>One of my co-workers brought up an example sale he was working on a while back. The prospect had decided to belittle our trade and said, &amp;ldquo;Web design is a commodity; everyone does it. I could easily find another company with cheaper rates. In fact, I could talk to the owner of your company and get a better deal if I wanted to.&amp;rdquo; The client was trying to get my co-worker to take offense in order to get his emotion on the table.&lt;/p>
&lt;p>He needed to recognize it and challenge him: &amp;ldquo;Well, if you think you can do that, go ahead. But I know he will not give you a better deal.&amp;rdquo; He even could have gone so far as telling him, &amp;ldquo;It sounds like we aren&amp;rsquo;t a good fit. You aren&amp;rsquo;t going to be getting the cheapest prices with us, and it sounds like that is very important to you. Perhaps you should look elsewhere.&amp;rdquo; In that sense he is throwing the ball back in the prospect&amp;rsquo;s court, trying to get his emotions to take over.&lt;/p>
&lt;p>As long as you are aware of what the prospect is trying to do and keep your own emotions in check, you will have greater success in sales. Keep the &lt;strong>70% nurturing and 30% adult rule&lt;/strong> in mind.&lt;/p></description></item><item><title>Google Analytics midterm update</title><link>https://joelkitching.com/google-analytics-midterm-update/</link><pubDate>Wed, 08 Jul 2009 00:00:00 +0000</pubDate><guid>https://joelkitching.com/google-analytics-midterm-update/</guid><description>&lt;p>I would like to give an update as to how the &lt;a href="http://www.drupal.org/project/google_analytics_api">Google Analytics API&lt;/a> project is going to date. Here is how it has progressed since the start of the GSoC term:&lt;/p>
&lt;h1 id="a-library-to-reuse">A library to reuse&lt;/h1>
&lt;p>I found an existing PHP library called &lt;a href="http://code.google.com/p/gapi-google-analytics-php-interface/">Google Analytics API PHP Interface (GAPI)&lt;/a> that had support to access the Google Analytics Data Export API, but it lacked AuthSub support, which is arguably one of the more flexible authentication methods to access Google Services. Thus I spent time looking into the auth documentation, and hacked in support to the library. I started tracking my changes into the &lt;a href="http://cvs.drupal.org/viewvc.py/drupal/contributions/modules/google_analytics_api/">Drupal.org CVS repository&lt;/a>.&lt;/p>
&lt;h1 id="licensing-issues">Licensing issues&lt;/h1>
&lt;p>Unfortunately, I soon found out from my mentor the unfortunate news that the library&amp;rsquo;s license (GPL3) was incompatible with that of Drupal&amp;rsquo;s (GPL2+) and therefore was not allowed in the repository. I contacted the owner of the GAPI library, Stig Manning, and luckily he was glad to let me merge my changes back into the library&amp;rsquo;s repository on Google Code, and in addition he had no problem re-licensing it so that it could be packaged with the Drupal module.&lt;/p>
&lt;h1 id="implementing-admin-interface">Implementing admin interface&lt;/h1>
&lt;p>At that point I started working on merging the changes back into the GAPI repository. Late night hacking then resulted in the following solid features of the module:&lt;/p>
&lt;ul>
&lt;li>An administration page where you can log into and out of a Google Account via AuthSub.&lt;/li>
&lt;li>A testing query page where you can fill in your metrics and dimensions and see what data Analytics will send back.&lt;/li>
&lt;/ul>
&lt;h1 id="future-plans">Future plans&lt;/h1>
&lt;p>According to the &lt;a href="http://groups.drupal.org/node/22599">wiki schedule&lt;/a>, all that needs doing before midterms is starting to figure out a GUI. So here are the future plans, including after the midterm submission:&lt;/p>
&lt;ul>
&lt;li>Create a tab beside &amp;ldquo;View&amp;rdquo; and &amp;ldquo;Edit&amp;rdquo; on nodes (not sure how to do this yet) that allows you to view said statistics.&lt;/li>
&lt;li>Create a block that is small enough to fit in a sidebar. Show some quick statistics about the node you are currently looking at.&lt;/li>
&lt;li>Views integration. Decide on the statistics that could easily be used to filter pages, and include them in Views.&lt;/li>
&lt;li>And for later on in the project: A dashboard page that aggregates some overall interesting statistics of the site.&lt;/li>
&lt;/ul>
&lt;h1 id="testing">Testing&lt;/h1>
&lt;p>I would love to start getting some people to test out the module and send feedback/flames/comments my way. It&amp;rsquo;s the first major Drupal module I have developed from scratch, so if you see things that are done a little strangely, feel free to point out a better way. I haven&amp;rsquo;t released any versions yet so you&amp;rsquo;ll need to check it out via everyone&amp;rsquo;s favourite source control program:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">cvs -z6 -d:pserver:anonymous:anonymous@cvs.drupal.org:/cvs/drupal-contrib &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> checkout -d google_analytics_api-HEAD google_analytics_api/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please take a look! It&amp;rsquo;ll be most meaningful if you have a Google Analytics profile with a decent amount of pre-existing traffic on it.&lt;/p>
&lt;p>But overall, so far so good. I am looking forward to the second half of this coding term. Thanks to everyone for sending emails with your interest in the project!&lt;/p></description></item><item><title>Setting up a Drupal development environment on a Mac</title><link>https://joelkitching.com/setting-up-a-drupal-development-environment-on-a-mac/</link><pubDate>Thu, 02 Jul 2009 00:00:00 +0000</pubDate><guid>https://joelkitching.com/setting-up-a-drupal-development-environment-on-a-mac/</guid><description>&lt;p>I am back at work full-time this summer at &lt;a href="http://imagexmedia.com/">ImageX Media&lt;/a>, where I have been over the past two summers as well. It&amp;rsquo;s a Mac shop. I don&amp;rsquo;t use Macs. And since I always seem to forget the process of setting up an ideal development environment on a Mac, I have recorded it here.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Install the wonderful &lt;a href="http://www.mamp.info/en/downloads/index.html">MAMP&lt;/a> (the free version works just fine) in your &lt;code>/Applications&lt;/code> directory.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you want to have your local web server on port 80 instead of the default 8888, there is a small extra step. Open up the &lt;code>/Applications/MAMP/conf/apache/httpd.conf&lt;/code> configuration file with your favourite editor (yes, I said favourite and not favorite). Look for a line that says &lt;strong>&lt;code>Listen 8888&lt;/code>&lt;/strong> (for me it is on line 219) and change the port to 80.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Now you can go ahead and start up the server. If you didn&amp;rsquo;t change the port, feel free to use the Dashboard widget included in the MAMP directory (just double-click on it to install). If not, open up a terminal, change directories to &lt;code>/Applications/MAMP/bin&lt;/code> and run &lt;strong>&lt;code>sudo ./startApache.sh&lt;/code>&lt;/strong> and &lt;strong>&lt;code>sudo ./startMysql.sh&lt;/code>&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you&amp;rsquo;re like me and use the command line a lot, you&amp;rsquo;ll want to create a symlink to the MySQL binary so that you don&amp;rsquo;t have to type in the full path every time you want to use it. Run these commands: &lt;code>sudo ln -s /Applications/MAMP/Library/bin/mysql /usr/local/bin/mysql&lt;/code> and &lt;code>sudo ln -s /Applications/MAMP/Library/bin/mysqldump /usr/local/bin/mysqldump&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I found that the easiest way to develop multiple sites is to keep each one in a separate directory, and access each directory with a separate hostname. Add this line to the bottom of your &lt;code>/etc/httpd.conf&lt;/code> file: &lt;code>VirtualDocumentRoot /Users/yourname/Sites/%0/&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create directories in your vhosts location. For example, if I have three Drupal sites (site1, site2, site3) I would &lt;code>mkdir ~/Sites/site{1,2,3}&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For each directory you create in your Sites directory, make sure the hostname is pointing to localhost. Edit your &lt;code>/etc/hosts&lt;/code> file to read: &lt;code>127.0.0.1 localhost site1 site2 site3&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Drupal uses a &lt;em>lot&lt;/em> of memory. Especially with &lt;strong>&lt;a href="http://drupal.org/project/imagecache">imagecache&lt;/a>&lt;/strong>. Open up your php.ini file (&lt;code>/Applications/MAMP/conf/php5/php.ini&lt;/code>) and fine the line that reads &lt;code>memory_limit 8M&lt;/code> (for me line 232) and change the 8M to 96M to ensure you never receive any out-of-memory errors.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>One last tweak. Unzip your Drupal site in &lt;code>~/Sites/site1&lt;/code>. For pretty URLs to work you are going to need to make one little tweak. Open up the &lt;code>.htaccess&lt;/code> file, and uncomment the line that reads &lt;code>RewriteBase /&lt;/code> (line 103) if Drupal is found in your site&amp;rsquo;s root directory, or change the path appropriately.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>And you&amp;rsquo;re done! Now you can access your sites by going to &lt;code>http://sites1/&lt;/code>, which points to localhost, gets accepted by Apache, which looks up &lt;code>/Users/yourname/Sites/sites1&lt;/code>, finds that it exists, and runs the &lt;code>index.php&lt;/code> file. Capiche? Virtual hosts are powerful indeed. Final details:&lt;/p>
&lt;ul>
&lt;li>By default, the MySQL username and password are both &lt;code>root&lt;/code>.&lt;/li>
&lt;li>To add a new site, create the directory, and add a corresponding entry in the &lt;code>/etc/hosts&lt;/code> file. Simple.&lt;/li>
&lt;/ul>
&lt;p>Now it&amp;rsquo;s back to development for me.&lt;/p></description></item><item><title>Extending WASession in Seaside</title><link>https://joelkitching.com/extending-wasession-in-seaside/</link><pubDate>Tue, 23 Jun 2009 00:00:00 +0000</pubDate><guid>https://joelkitching.com/extending-wasession-in-seaside/</guid><description>&lt;p>One of the goals I had with this blog was to make the maintenance and updates dead simple. Certainly, I could open up the Squeak image every time I want to add a post, but I wanted to be able to edit and create posts directly in the browser.&lt;/p>
&lt;h1 id="what-is-wasession">What is WASession?&lt;/h1>
&lt;p>A WASession instance is created when &amp;ldquo;a user accesses an application for the first time and is persistent as long as the user is interacting with it.&amp;rdquo; You who is reading this post have an instance of WASession stored in the Squeak image behind this website right now!&lt;/p>
&lt;p>The beauty of this system is that you can store information about &lt;em>who&lt;/em> is viewing the blog in the WASession instance, by subclassing it. I extended WASession, and simply added an instance variable called &lt;code>admin&lt;/code>, along with appropriate setter and accessor methods:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>WASession&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>&lt;code>JKSession&lt;/code>&lt;/strong> extends &lt;strong>&lt;code>WASession&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>instance variables:
&lt;ul>
&lt;li>&lt;code>admin&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>methods:
&lt;ul>
&lt;li>&lt;code>isAdmin&lt;/code>&lt;/li>
&lt;li>&lt;code>setAdmin&lt;/code>&lt;/li>
&lt;li>&lt;code>unsetAdmin&lt;/code>&lt;/li>
&lt;li>&lt;code>initialize&lt;/code> (runs &lt;code>self unsetAdmin&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="logging-in-as-an-administrator">Logging in as an administrator&lt;/h1>
&lt;p>I wanted to be able to do what most people would expect on modern CMS&amp;rsquo;s today: go to a private &lt;code>/admin&lt;/code> URL and log in to receive special privileges. Try it, and see what happens! (I won&amp;rsquo;t put a link so that the ubiquitous Google spider will not find it.)&lt;/p>
&lt;p>On the Seaside of things, this involved extending my main &lt;strong>JKLayout&lt;/strong> application class, pointing &lt;code>/admin&lt;/code> to that class with password protection, and then in the initialization method, calling the session&amp;rsquo;s &lt;code>setAdmin&lt;/code> method.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>JKLayout&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>&lt;code>JKAdminLayout&lt;/code>&lt;/strong> extends &lt;strong>&lt;code>JKLayout&lt;/code>&lt;/strong>
&lt;ul>
&lt;li>methods:
&lt;ul>
&lt;li>&lt;code>initialize&lt;/code> (runs &lt;code>self session setAdmin&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>To install both of these applications at their respective locations, I ran these commands in a workspace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-squeak" data-lang="squeak">&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;#34;registers the application for normal users&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nc">JKLayout&lt;/span> &lt;span class="nf">registerAsApplication:&lt;/span> &lt;span class="nv">index&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;#34;registers the application for administrators&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;#34;note: prompts you for a username and password&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">JKAdminLayout&lt;/span> &lt;span class="nf">registerAsAuthenticatedApplication:&lt;/span> &lt;span class="nv">admin&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="administrator-privileges">Administrator privileges&lt;/h1>
&lt;p>Now, whenever I want to have hidden content or extra links that only an administrator can see, it is as simple as: &lt;code>self session isAdmin ifTrue: [ ... ]&lt;/code>, which can be called within any WAComponent instance.&lt;/p>
&lt;p>On my own blog, this allowed me to add links to create, edit and delete posts, also creating the appropriate forms to which these links point. In addition, I show all unpublished content and mark it as such, allowing me to gradually write draft posts.&lt;/p>
&lt;h1 id="different-user-different-content">Different user, different content&lt;/h1>
&lt;p>Similar techniques can be used for sites that have multiple levels of accounts. For example, you might have an e-commerce website in which the administrator needs to be able to add and edit items for sale, with user accounts with the ability to purchase said items.&lt;/p>
&lt;p>Now go forth and code your subclassed WASessions!&lt;/p></description></item><item><title>PHP vs. Squeak: a breakup</title><link>https://joelkitching.com/php-vs.-squeak-a-breakup/</link><pubDate>Wed, 17 Jun 2009 00:00:00 +0000</pubDate><guid>https://joelkitching.com/php-vs.-squeak-a-breakup/</guid><description>&lt;p>&lt;em>What follows is an open letter to PHP, with the reasons why I have decided to break up with it.&lt;/em>&lt;/p>
&lt;p>PHP, there used to be a spark in between us. Every time I would see you, my heart would light up, cogs would start whirring in my brain, and other stuff would happen too.&lt;/p>
&lt;p>I tried to look past your strange naming schemes. I tried to look past your tacked-on object-oriented support. Other languages did come by and tempt me&amp;mdash;Python, Perl, even MySQL at times&amp;mdash;but I remained faithful, I swear. At least, I tried to.&lt;/p>
&lt;p>But it&amp;rsquo;s too hard&amp;mdash;I can&amp;rsquo;t do a long-distance anymore. I have found someone else to spend my days with. Someone who understands me. Where you were an unresponsive and inactive partner, Squeak patiently waits and helps us grow together as we go along. When things go wrong, Squeak is waiting there to help fix things.&lt;/p>
&lt;h1 id="top-5-reasons-to-use-squeak-over-php">Top 5 reasons to use Squeak over PHP&lt;/h1>
&lt;p>And so, here are the top 5 reasons why I have decided to break up with you, PHP:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Where you had ugly &lt;code>print_r&lt;/code> statements and clunky &lt;a href="http://xdebug.org/">xdebug&lt;/a> interfaces, Squeak pipes up with its tested and proven &lt;strong>debugger with a full stack trace&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Your function arguments are difficult to remember. Certainly I can look them up on &lt;a href="http://php.net">php.net&lt;/a> or use an IDE to find out, but in Smalltalk the &lt;strong>arguments are built-in to the message name&lt;/strong>. For example: &lt;code>httpPostDocument:args:&lt;/code>, versus: &lt;code>http_post_document($var1, $var2)&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When you&amp;rsquo;re needed, you grudgingly grind into existence, loading all your extensions and libraries. Squeak, like Python web applications, starts up once and &lt;strong>stays running&lt;/strong>. You can get fantastic speed increases this way.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Squeak is portable&lt;/strong>. It runs anywhere, on any platform&amp;mdash;offline development becomes a snap, as all you need is your image and a Squeak VM executable. No need to set up Apache, PHP, deal with file permissions, etc.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>And finally, &lt;strong>Squeak is alive&lt;/strong>. I&amp;rsquo;m not writing out dead &lt;code>.php&lt;/code> files and hoping errors don&amp;rsquo;t crop up when I run them. Squeak has no concept of files, and instead constantly compiles code as you separate methods, correcting your syntax errors on-the-spot. I can execute bits of code while I am writing them to test them out. No need to open up a new console and run &lt;code>php -r 'some code here'&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h1 id="recruitment">Recruitment&lt;/h1>
&lt;p>Hopefully you will understand why I have left you. And although it might seem vindictive, I won&amp;rsquo;t hesitate from convincing others to do the same. If anyone out there is reading this, please look into something else. Even if it isn&amp;rsquo;t Squeak, do yourself a favour and borrow from Obama&amp;rsquo;s platform: try &lt;a href="http://django.com/">Django&lt;/a> or &lt;a href="http://seaside.net/">Seaside&lt;/a>, or any other web framework not built with PHP.&lt;/p></description></item><item><title>Metrics and dimensions</title><link>https://joelkitching.com/metrics-and-dimensions/</link><pubDate>Tue, 16 Jun 2009 00:00:00 +0000</pubDate><guid>https://joelkitching.com/metrics-and-dimensions/</guid><description>&lt;p>I have never learned anything about web analytics before. This year, my submission to Google Summer of Code for a Drupal module (&lt;a href="https://www.drupal.org/project/google_analytics_api">Google Analytics API&lt;/a>) that makes use of the recently-released &lt;a href="http://code.google.com/apis/analytics/docs/gdata/gdataDeveloperGuide.html">Google Analytics Data Export API&lt;/a> was accepted. I have been doing a lot of reading about the vocabulary used, the methods of filtering data, etc.&lt;/p>
&lt;p>One distinction that is crucial to understand in querying the Google servers for analytics data is the difference between &lt;em>metrics&lt;/em> and &lt;em>dimensions&lt;/em>.&lt;/p>
&lt;p>&lt;strong>Metrics&lt;/strong> are the actual hard pieces of tangible statistics themselves. These can include, for example:&lt;/p>
&lt;ul>
&lt;li>the length of a visit&lt;/li>
&lt;li>total page views&lt;/li>
&lt;li>the number of clicks on ads to get to your site&lt;/li>
&lt;li>entrances and exits to your site&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Dimensions&lt;/strong> are the ways one can limit the scope of the metrics returned. Ways of doing this can include:&lt;/p>
&lt;ul>
&lt;li>a date range (start and end date)&lt;/li>
&lt;li>the address or URL of a page&lt;/li>
&lt;li>the browser used&lt;/li>
&lt;li>the resolution size&lt;/li>
&lt;li>the originating country&lt;/li>
&lt;/ul>
&lt;h1 id="in-practice">In practice&lt;/h1>
&lt;p>Without dimensions, you get the overall statistic for the entirety of your site. But when queried in conjunction with dimensions, you can get some interesting data.&lt;/p>
&lt;p>For example: &lt;em>Give the number of &lt;strong>page views&lt;/strong> with respect to different &lt;strong>countries&lt;/strong>&lt;/em>.&lt;/p>
&lt;p>Or, in Google parlance: &lt;em>Select the &lt;strong>ga:pageviews&lt;/strong> metric in conjunction with the &lt;strong>ga:country&lt;/strong> dimension&lt;/em>, giving something that looks like this, which in actual fact looks much like an SQL query result:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Country&lt;/th>
&lt;th>Page Views&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Algeria&lt;/td>
&lt;td>14&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Belgium&lt;/td>
&lt;td>39&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Canada&lt;/td>
&lt;td>49&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;hellip;&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>The possibilities are boundless (okay, they are bounded by dimensions), and I am sure there will be many practical applications in Drupal.&lt;/p></description></item><item><title>Smalltalk-80 and Squeak: an introduction</title><link>https://joelkitching.com/smalltalk-80-and-squeak-an-introduction/</link><pubDate>Fri, 29 May 2009 00:00:00 +0000</pubDate><guid>https://joelkitching.com/smalltalk-80-and-squeak-an-introduction/</guid><description>&lt;p>Riddle me this: given the success of the Java programming language and object-oriented programming in general, why has no one heard of Smalltalk? Smalltalk is the first fully object-oriented language, older than the great K&amp;amp;R C itself.&lt;/p>
&lt;h1 id="dabble-db-takes-my-smalltalk-virginity">Dabble DB takes my Smalltalk virginity&lt;/h1>
&lt;p>In January 2009, through my university, I started a co-op work term with a company called Smallthought Systems. They&amp;rsquo;re the guys behind the award-winning web app &lt;a href="http://dabbledb.com/">Dabble DB&lt;/a>.&lt;/p>
&lt;p>On the job listing it noted applicants would be programming in Smalltalk, which I had never heard of at the time. Here&amp;rsquo;s a conversation we had on my first day:&lt;/p>
&lt;blockquote>
&lt;p>Them: Ever programmed in Smalltalk?&lt;/p>
&lt;p>Me: Nope.&lt;/p>
&lt;p>Them: Well, trust us, once you&amp;rsquo;&amp;rsquo;ve tried it there&amp;rsquo;&amp;rsquo;s no going back. Or if you do have to program with something else, you&amp;rsquo;&amp;rsquo;ll hate every minute of it.&lt;/p>
&lt;/blockquote>
&lt;p>I laughed. Of course nothing that was decades old could be so radically ground-breaking. Boy was I wrong.&lt;/p>
&lt;h1 id="and-you-call-this-programming">And you call this programming?&lt;/h1>
&lt;p>I&amp;rsquo;m not going to lie&amp;mdash;Squeak is weird. With Squeak, you don&amp;rsquo;t open up your text editor, type out some code, hit &amp;ldquo;save&amp;rdquo;, compile said file, and run the binary.&lt;/p>
&lt;p>You use the Squeak Virtual Machine to open up an image&amp;mdash;a saved state of an entire implementation of Smalltalk&amp;mdash;wherein everything is programmed in Squeak. The graphical interface is programmed in Squeak. The compiler is programmed in Squeak. And everything is modifiable.&lt;/p>
&lt;h1 id="some-history">Some history&lt;/h1>
&lt;p>Those images themselves are actually descendants of the one used by researchers at XEROX PARC. Nowadays, there are a number of different implementations forked from the original image, including a free and open-source one called &lt;a href="http://www.squeak.org/">Squeak&lt;/a> (if you listen to &lt;a href="https://twit.tv/shows/floss-weekly">FLOSS Weekly&lt;/a> you&amp;rsquo;ll hear about it in &lt;a href="https://twit.tv/shows/floss-weekly/episodes/29">Episode 29&lt;/a>, in which the Smalltalk and Squeak co-creator Dan Ingalls is interviewed).&lt;/p></description></item><item><title>Waterfall vs. iterative development</title><link>https://joelkitching.com/waterfall-vs.-iterative-development/</link><pubDate>Mon, 18 May 2009 00:00:00 +0000</pubDate><guid>https://joelkitching.com/waterfall-vs.-iterative-development/</guid><description>&lt;p>The waterfall method of development is inherently broken. Applications evolve, requirements evolve, clients change their mind, and the web moves forward at an ever-accelerating pace.&lt;/p>
&lt;p>Why were developers forced into using waterfall development in the past?&lt;/p>
&lt;h1 id="definitions">Definitions&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Waterfall development&lt;/strong> completes the project-wide work-products of each discipline in a single step before moving on to the next discipline in the next step. Business value is delivered all at once, and only at the very end of the project.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Iterative development&lt;/strong> slices the deliverable business value (system functionality) into iterations. In each iteration a slice of functionality is delivered through cross-discipline work, starting from the model/requirements through to the testing/deployment.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>(From &lt;a href="http://en.wikipedia.org/wiki/Iterative_and_incremental_development">Wikipedia: Iterative and incremental development&lt;/a>)&lt;/p>
&lt;h1 id="waterfall-development-physical-examples">Waterfall development: physical examples&lt;/h1>
&lt;p>In some cases, falling down the boulder-strewn and dangerous waterfall is both inevitable and unavoidable. For example:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Toyota builds a car. This particular car happens to be a Corolla, and encounters minimal problems. Hooray! Compare, however, with a Ford Windstar. Malfunctions and repairs galore. Can Ford fix globally these issues as time goes on? Nope.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Intel releases a CPU with a little-known bug in the floating-point arithmetic unit. 99.99% of the time, the CPU spits out the correct answer. But can Intel fix it? Not unless they announce a recall and send out repaired versions of all chips sold.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In May 1990, Windows 3.0 is released and shipped to customers worldwide. It is installed on millions of computers, and is not updated until the release of Windows 3.1 in March 1992.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="a-compromise-the-advent-of-the-internet">A compromise: the advent of the internet&lt;/h1>
&lt;p>The internet allows software a major advantage over physical entities such as those described above. It enables numerous different ways of streamlining updates directly to the end-user:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Users can easily download updated versions of their software themselves. This usually doesn&amp;rsquo;t happen.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Software can pop up annoying messages reminding users to update their software. This is annoying. If you&amp;rsquo;re lucky, it can also make the update as easy as clicking a button.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Package management systems. Here&amp;rsquo;s where the money is. Linux distributions with powerful package management software and rich repositories can typically be updated by the user with a single command.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Thus releasing software more often becomes possible.&lt;/p>
&lt;h1 id="the-ideal-solution-web-applications">The ideal solution: web applications&lt;/h1>
&lt;p>Web applications are ideal because they do not require versions at all. The application can simply be updated on the server side, gradually adding features as needed.&lt;/p>
&lt;p>Of course, it remains a good idea to use source control and attribute version numbers to your application &amp;ldquo;releases&amp;rdquo; behind the scenes. It simply allows for these releases to become live for all users of the application instantaneously.&lt;/p>
&lt;p>Thus web applications provide the ultimate freedom in releasing software whenever needed. This allows for advantageous iterative approaches to development, including the &lt;strong>agile&lt;/strong> and &lt;strong>scrum&lt;/strong> methods being buzzed about lately.&lt;/p>
&lt;h1 id="live-programming">Live programming&lt;/h1>
&lt;p>The software on which this web application runs, Squeak, is unconventional (but not unique) in that it can be updated while it is running. This will be investigated in an upcoming post.&lt;/p></description></item></channel></rss>